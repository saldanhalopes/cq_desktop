package view.laboratorio;

import view.config.FrmSelecionaUsuario;
import DAO.AnaliseDAO;
import DAO.ColunaConfigDAO;
import DAO.MetodologiaDAO;
import DAO.ColunaDAO;
import DAO.SetorDAO;
import acesso.ColunaAcesso;
import model.Analise;
import model.Metodologia;
import model.Coluna;
import model.ColunaConfig;
import model.Setor;
import model.Usuario;
import util.ComboBox;
import util.DataHora;
import java.sql.Timestamp;
import view.cadastro.FrmProcurarMetodologia;
import view.principal.FrmCarregando;
import java.awt.Cursor;
import java.awt.HeadlessException;
import java.awt.event.KeyEvent;
import java.util.ArrayList;
import java.util.Date;
import java.util.TreeMap;
import javax.swing.JOptionPane;
import javax.swing.RowFilter;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableRowSorter;

/**
 *
 * @author rafael
 */
public final class FrmColuna extends javax.swing.JInternalFrame {

    private boolean novoColuna = false;
    final String zeros = "0000";
    private TreeMap<Integer, String> categoryMapSetorPesquisar = new TreeMap<>();
    private TreeMap<Integer, String> categoryMapSetor = new TreeMap<>();
    private TreeMap<Integer, String> categoryMapMetodo = new TreeMap<>();
    private TreeMap<Integer, String> categoryMapFinalidade = new TreeMap<>();
    private TreeMap<Integer, String> categoryMapAnalise = new TreeMap<>();

    /**
     * Creates new form NovoJInternalFrame
     */
    public FrmColuna() {
        initComponents();
        setTitle("Colunas");
        readSetorPesquisar();
        readColuna();
        fecharDados();
        ColunaAcesso Acesso = new ColunaAcesso();
        Acesso.verificarAcessoColuna();
        txtDataAtivacao.setMaxSelectableDate(new Date());
        txtDataAtivacao.setMinSelectableDate(DataHora.getTimestampDate("01/01/2015"));
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pnlColunas = new javax.swing.JTabbedPane();
        pnlColuna = new javax.swing.JPanel();
        jPanel5 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblColuna = new javax.swing.JTable();
        txtPesquisarColuna = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jLabel25 = new javax.swing.JLabel();
        cmbPesquisarSetor = new javax.swing.JComboBox();
        jLabel13 = new javax.swing.JLabel();
        cmbPesquisarStatus = new javax.swing.JComboBox<String>();
        btnImprimirRelatorio = new javax.swing.JButton();
        pnlDados = new javax.swing.JPanel();
        btnExcluirColuna = new javax.swing.JButton();
        btnSalvarColuna = new javax.swing.JButton();
        btnCancelar = new javax.swing.JButton();
        jPanel6 = new javax.swing.JPanel();
        jLabel24 = new javax.swing.JLabel();
        jLabel28 = new javax.swing.JLabel();
        jLabel31 = new javax.swing.JLabel();
        cmbMetodo = new javax.swing.JComboBox();
        cmbFinalidade = new javax.swing.JComboBox();
        jLabel3 = new javax.swing.JLabel();
        cmbAnalise = new javax.swing.JComboBox();
        jLabel37 = new javax.swing.JLabel();
        txtObsColuna = new javax.swing.JTextField();
        cmbSetor = new javax.swing.JComboBox();
        btnProcurarMetodo = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jLabel27 = new javax.swing.JLabel();
        cmbFabricante = new javax.swing.JComboBox();
        jLabel32 = new javax.swing.JLabel();
        cmbMarca = new javax.swing.JComboBox();
        jLabel40 = new javax.swing.JLabel();
        txtPartNumber = new javax.swing.JTextField();
        jLabel42 = new javax.swing.JLabel();
        txtSerialNumber = new javax.swing.JTextField();
        jLabel47 = new javax.swing.JLabel();
        txtCodigoSap = new javax.swing.JTextField();
        btnProcurarFabricante = new javax.swing.JButton();
        btnProcurarMarca = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jLabel29 = new javax.swing.JLabel();
        cmbTamanho = new javax.swing.JComboBox();
        jLabel43 = new javax.swing.JLabel();
        jLabel34 = new javax.swing.JLabel();
        cmbDiametro = new javax.swing.JComboBox();
        jLabel44 = new javax.swing.JLabel();
        jLabel33 = new javax.swing.JLabel();
        cmbParticula = new javax.swing.JComboBox();
        jLabel45 = new javax.swing.JLabel();
        jLabel39 = new javax.swing.JLabel();
        cmbTipoColuna = new javax.swing.JComboBox();
        jLabel46 = new javax.swing.JLabel();
        cmbFase = new javax.swing.JComboBox();
        jLabel35 = new javax.swing.JLabel();
        btnVagaColuna = new javax.swing.JButton();
        txtVaga = new javax.swing.JTextField();
        btnProcurarFase = new javax.swing.JButton();
        btnProcurarTipoColuna = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jLabel36 = new javax.swing.JLabel();
        txtDataAtivacao = new com.toedter.calendar.JDateChooser();
        jLabel1 = new javax.swing.JLabel();
        txtUsuarioPerfermance = new javax.swing.JTextField();
        btnUsuarioPerformance = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        btnPerformance = new javax.swing.JButton();
        txtDataPerformanceAtivacao = new javax.swing.JTextField();
        jPanel4 = new javax.swing.JPanel();
        jLabel38 = new javax.swing.JLabel();
        txtDataDescarte = new javax.swing.JTextField();
        btnDescarte = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        txtUsuarioDescarte = new javax.swing.JTextField();
        jMenuBar1 = new javax.swing.JMenuBar();
        mnuArquivo = new javax.swing.JMenu();
        mnuNovoColuna = new javax.swing.JMenu();
        itmNovoColuna = new javax.swing.JMenuItem();
        mnuSair = new javax.swing.JMenuItem();
        mnuEditColuna = new javax.swing.JMenu();
        itmEditarColuna = new javax.swing.JMenuItem();
        itmExcluirColuna = new javax.swing.JMenuItem();
        mnuImpressao = new javax.swing.JMenu();
        itmRelatorioGeral = new javax.swing.JMenuItem();
        itmEtiqueta = new javax.swing.JMenuItem();

        getContentPane().setLayout(new java.awt.GridLayout(1, 0));

        jPanel5.setBorder(javax.swing.BorderFactory.createTitledBorder("Colunas"));

        tblColuna.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Id", "Código Coluna", "Coluna", "Método", "n° SAP", "Localização", "Ativação", "Observações", "part_number", "serial_number", "metodo"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Object.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblColuna.setSurrendersFocusOnKeystroke(true);
        tblColuna.getTableHeader().setReorderingAllowed(false);
        tblColuna.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblColunaMouseClicked(evt);
            }
        });
        tblColuna.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                tblColunaKeyReleased(evt);
            }
        });
        jScrollPane1.setViewportView(tblColuna);
        if (tblColuna.getColumnModel().getColumnCount() > 0) {
            tblColuna.getColumnModel().getColumn(0).setPreferredWidth(40);
            tblColuna.getColumnModel().getColumn(0).setMaxWidth(40);
            tblColuna.getColumnModel().getColumn(1).setMinWidth(105);
            tblColuna.getColumnModel().getColumn(1).setPreferredWidth(105);
            tblColuna.getColumnModel().getColumn(1).setMaxWidth(105);
            tblColuna.getColumnModel().getColumn(3).setMinWidth(120);
            tblColuna.getColumnModel().getColumn(3).setPreferredWidth(120);
            tblColuna.getColumnModel().getColumn(3).setMaxWidth(120);
            tblColuna.getColumnModel().getColumn(4).setMinWidth(70);
            tblColuna.getColumnModel().getColumn(4).setPreferredWidth(70);
            tblColuna.getColumnModel().getColumn(4).setMaxWidth(70);
            tblColuna.getColumnModel().getColumn(5).setMinWidth(150);
            tblColuna.getColumnModel().getColumn(5).setPreferredWidth(150);
            tblColuna.getColumnModel().getColumn(5).setMaxWidth(150);
            tblColuna.getColumnModel().getColumn(6).setMinWidth(80);
            tblColuna.getColumnModel().getColumn(6).setPreferredWidth(80);
            tblColuna.getColumnModel().getColumn(6).setMaxWidth(80);
            tblColuna.getColumnModel().getColumn(7).setMinWidth(50);
            tblColuna.getColumnModel().getColumn(7).setPreferredWidth(180);
            tblColuna.getColumnModel().getColumn(7).setMaxWidth(300);
            tblColuna.getColumnModel().getColumn(8).setMinWidth(0);
            tblColuna.getColumnModel().getColumn(8).setPreferredWidth(0);
            tblColuna.getColumnModel().getColumn(8).setMaxWidth(0);
            tblColuna.getColumnModel().getColumn(9).setMinWidth(0);
            tblColuna.getColumnModel().getColumn(9).setPreferredWidth(0);
            tblColuna.getColumnModel().getColumn(9).setMaxWidth(0);
            tblColuna.getColumnModel().getColumn(10).setMinWidth(0);
            tblColuna.getColumnModel().getColumn(10).setPreferredWidth(0);
            tblColuna.getColumnModel().getColumn(10).setMaxWidth(0);
        }

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 971, Short.MAX_VALUE)
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 388, Short.MAX_VALUE)
        );

        txtPesquisarColuna.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtPesquisarColunaKeyReleased(evt);
            }
        });

        jLabel4.setText("Pesquisar:");

        jLabel25.setText("Setor:");

        cmbPesquisarSetor.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cmbPesquisarSetorItemStateChanged(evt);
            }
        });

        jLabel13.setText("Status:");

        cmbPesquisarStatus.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Todos", "Ativos", "Inativos", "s/ Performance" }));
        cmbPesquisarStatus.setSelectedIndex(1);
        cmbPesquisarStatus.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cmbPesquisarStatusItemStateChanged(evt);
            }
        });

        btnImprimirRelatorio.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/print.png"))); // NOI18N
        btnImprimirRelatorio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnImprimirRelatorioActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlColunaLayout = new javax.swing.GroupLayout(pnlColuna);
        pnlColuna.setLayout(pnlColunaLayout);
        pnlColunaLayout.setHorizontalGroup(
            pnlColunaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlColunaLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlColunaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlColunaLayout.createSequentialGroup()
                        .addGap(8, 8, 8)
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtPesquisarColuna)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel25)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cmbPesquisarSetor, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel13)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cmbPesquisarStatus, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnImprimirRelatorio, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        pnlColunaLayout.setVerticalGroup(
            pnlColunaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlColunaLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlColunaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlColunaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(cmbPesquisarStatus, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel13)
                        .addComponent(cmbPesquisarSetor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel25))
                    .addGroup(pnlColunaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(txtPesquisarColuna, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel4))
                    .addComponent(btnImprimirRelatorio))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pnlColunas.addTab("Colunas", pnlColuna);

        pnlDados.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        btnExcluirColuna.setText("Excuir");
        btnExcluirColuna.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExcluirColunaActionPerformed(evt);
            }
        });

        btnSalvarColuna.setText("Ok");
        btnSalvarColuna.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSalvarColunaActionPerformed(evt);
            }
        });

        btnCancelar.setText("Cancelar");
        btnCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelarActionPerformed(evt);
            }
        });

        jPanel6.setBorder(javax.swing.BorderFactory.createTitledBorder("Análise"));

        jLabel24.setText("Método:");

        jLabel28.setText("Setor:");

        jLabel31.setText("Análise:");

        cmbMetodo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbMetodoActionPerformed(evt);
            }
        });

        jLabel3.setText("Finalidade:");

        jLabel37.setText("Obs:");

        btnProcurarMetodo.setText("Buscar");
        btnProcurarMetodo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnProcurarMetodoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel28, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel24, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel31, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel37, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addComponent(cmbMetodo, 0, 317, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnProcurarMetodo))
                    .addComponent(txtObsColuna, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(cmbAnalise, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(cmbSetor, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(cmbFinalidade, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(13, 13, 13))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel28)
                    .addComponent(cmbSetor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(3, 3, 3)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cmbMetodo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel24)
                    .addComponent(btnProcurarMetodo))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cmbAnalise, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel31))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cmbFinalidade, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel37)
                    .addComponent(txtObsColuna, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Informações da Coluna"));

        jLabel27.setText("Fabricante:");

        jLabel32.setText("Marca:");

        jLabel40.setText("Part Number:");

        jLabel42.setText("Serial Number:");

        jLabel47.setText("Código SAP:");

        btnProcurarFabricante.setText("Buscar");
        btnProcurarFabricante.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnProcurarFabricanteActionPerformed(evt);
            }
        });

        btnProcurarMarca.setText("Buscar");
        btnProcurarMarca.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnProcurarMarcaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel47, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel42, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel27, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel32, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel40, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtSerialNumber)
                            .addComponent(txtCodigoSap, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(txtPartNumber))
                        .addGap(12, 12, 12))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(cmbMarca, 0, 317, Short.MAX_VALUE)
                            .addComponent(cmbFabricante, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnProcurarFabricante, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(btnProcurarMarca, javax.swing.GroupLayout.Alignment.TRAILING))
                        .addContainerGap())))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cmbFabricante, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel27)
                    .addComponent(btnProcurarFabricante))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cmbMarca, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel32)
                    .addComponent(btnProcurarMarca))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel40)
                    .addComponent(txtPartNumber, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel42)
                    .addComponent(txtSerialNumber, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel47)
                    .addComponent(txtCodigoSap, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(13, Short.MAX_VALUE))
        );

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Propriedades"));

        jLabel29.setText("Tamanho:");

        jLabel43.setText("mm");

        jLabel34.setText("Diâmetro:");

        jLabel44.setText("mm");

        jLabel33.setText("Partícula:");

        jLabel45.setText("µm");

        jLabel39.setText("Tipo:");

        jLabel46.setText("Fase:");

        cmbFase.setModel(new javax.swing.DefaultComboBoxModel(new String[] { " " }));

        jLabel35.setText("Vaga:");

        btnVagaColuna.setText("Vaga");
        btnVagaColuna.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnVagaColunaActionPerformed(evt);
            }
        });

        txtVaga.setEditable(false);
        txtVaga.setBackground(new java.awt.Color(204, 204, 204));

        btnProcurarFase.setText("Buscar");
        btnProcurarFase.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnProcurarFaseActionPerformed(evt);
            }
        });

        btnProcurarTipoColuna.setText("Buscar");
        btnProcurarTipoColuna.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnProcurarTipoColunaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGap(64, 64, 64)
                        .addComponent(cmbFase, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(6, 6, 6)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(btnProcurarFase, javax.swing.GroupLayout.DEFAULT_SIZE, 77, Short.MAX_VALUE)
                            .addComponent(btnProcurarTipoColuna, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel35, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel46, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtVaga)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnVagaColuna, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(2, 2, 2))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(63, 63, 63)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(cmbDiametro, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(cmbTamanho, javax.swing.GroupLayout.Alignment.TRAILING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(cmbTipoColuna, javax.swing.GroupLayout.Alignment.TRAILING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(cmbParticula, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(jLabel39, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel29, javax.swing.GroupLayout.DEFAULT_SIZE, 60, Short.MAX_VALUE)
                                .addComponent(jLabel34, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addComponent(jLabel33, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(4, 4, 4)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel44, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 75, Short.MAX_VALUE)
                            .addComponent(jLabel43, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel45, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel35)
                    .addComponent(btnVagaColuna)
                    .addComponent(txtVaga, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cmbFase, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel46)
                    .addComponent(btnProcurarFase))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cmbTipoColuna, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel39)
                    .addComponent(btnProcurarTipoColuna))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cmbTamanho, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel43)
                    .addComponent(jLabel29))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cmbDiametro, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel44)
                    .addComponent(jLabel34))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cmbParticula, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel45)
                    .addComponent(jLabel33))
                .addContainerGap())
        );

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder("Ativação"));

        jLabel36.setText("Ativação:");

        jLabel1.setText("Performance:");

        txtUsuarioPerfermance.setEditable(false);
        txtUsuarioPerfermance.setBackground(new java.awt.Color(204, 204, 204));

        btnUsuarioPerformance.setText("Usuário");
        btnUsuarioPerformance.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUsuarioPerformanceActionPerformed(evt);
            }
        });

        jLabel2.setText("Responsável:");

        btnPerformance.setText("Ok");
        btnPerformance.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPerformanceActionPerformed(evt);
            }
        });

        txtDataPerformanceAtivacao.setEditable(false);
        txtDataPerformanceAtivacao.setBackground(new java.awt.Color(204, 204, 204));

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 73, Short.MAX_VALUE)
                    .addComponent(jLabel36, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtDataAtivacao, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtUsuarioPerfermance)
                            .addComponent(txtDataPerformanceAtivacao))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(btnUsuarioPerformance, javax.swing.GroupLayout.DEFAULT_SIZE, 79, Short.MAX_VALUE)
                            .addComponent(btnPerformance, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtDataAtivacao, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel36))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnPerformance)
                    .addComponent(txtDataPerformanceAtivacao, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtUsuarioPerfermance, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnUsuarioPerformance))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder("Descarete"));

        jLabel38.setText("Descarte:");

        txtDataDescarte.setEditable(false);
        txtDataDescarte.setBackground(new java.awt.Color(204, 204, 204));

        btnDescarte.setText("Descartar");
        btnDescarte.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDescarteActionPerformed(evt);
            }
        });

        jLabel6.setText("Responsável:");

        txtUsuarioDescarte.setEditable(false);
        txtUsuarioDescarte.setBackground(new java.awt.Color(204, 204, 204));

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel38, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtDataDescarte)
                    .addComponent(txtUsuarioDescarte))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnDescarte)
                .addGap(14, 14, 14))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel38)
                    .addComponent(txtDataDescarte, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnDescarte))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtUsuarioDescarte, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6))
                .addContainerGap(14, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout pnlDadosLayout = new javax.swing.GroupLayout(pnlDados);
        pnlDados.setLayout(pnlDadosLayout);
        pnlDadosLayout.setHorizontalGroup(
            pnlDadosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlDadosLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlDadosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlDadosLayout.createSequentialGroup()
                        .addComponent(btnExcluirColuna, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnSalvarColuna, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnCancelar, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlDadosLayout.createSequentialGroup()
                        .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlDadosLayout.createSequentialGroup()
                        .addGroup(pnlDadosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
        );
        pnlDadosLayout.setVerticalGroup(
            pnlDadosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlDadosLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlDadosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlDadosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(pnlDadosLayout.createSequentialGroup()
                        .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 28, Short.MAX_VALUE)
                .addGroup(pnlDadosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnExcluirColuna)
                    .addGroup(pnlDadosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(btnCancelar)
                        .addComponent(btnSalvarColuna)))
                .addContainerGap())
        );

        pnlColunas.addTab("Dados", pnlDados);

        getContentPane().add(pnlColunas);

        mnuArquivo.setText("Arquivo");

        mnuNovoColuna.setText("Novo");

        itmNovoColuna.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_INSERT, java.awt.event.InputEvent.ALT_MASK));
        itmNovoColuna.setText("Coluna");
        itmNovoColuna.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                itmNovoColunaActionPerformed(evt);
            }
        });
        mnuNovoColuna.add(itmNovoColuna);

        mnuArquivo.add(mnuNovoColuna);

        mnuSair.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_F4, java.awt.event.InputEvent.SHIFT_MASK));
        mnuSair.setText("Sair");
        mnuSair.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnuSairActionPerformed(evt);
            }
        });
        mnuArquivo.add(mnuSair);

        jMenuBar1.add(mnuArquivo);

        mnuEditColuna.setText("Editar");

        itmEditarColuna.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_ENTER, java.awt.event.InputEvent.ALT_MASK));
        itmEditarColuna.setText("Editar");
        itmEditarColuna.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                itmEditarColunaActionPerformed(evt);
            }
        });
        mnuEditColuna.add(itmEditarColuna);

        itmExcluirColuna.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_DELETE, java.awt.event.InputEvent.ALT_MASK));
        itmExcluirColuna.setText("Excluir");
        itmExcluirColuna.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                itmExcluirColunaActionPerformed(evt);
            }
        });
        mnuEditColuna.add(itmExcluirColuna);

        jMenuBar1.add(mnuEditColuna);

        mnuImpressao.setText("Impressão");

        itmRelatorioGeral.setText("Relatório Geral");
        itmRelatorioGeral.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                itmRelatorioGeralActionPerformed(evt);
            }
        });
        mnuImpressao.add(itmRelatorioGeral);

        itmEtiqueta.setText("Etiqueta");
        itmEtiqueta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                itmEtiquetaActionPerformed(evt);
            }
        });
        mnuImpressao.add(itmEtiqueta);

        jMenuBar1.add(mnuImpressao);

        setJMenuBar(jMenuBar1);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void itmNovoColunaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_itmNovoColunaActionPerformed
        setCursor(Cursor.getPredefinedCursor(Cursor.WAIT_CURSOR));
        abrirDados();
        setCursor(Cursor.getPredefinedCursor(Cursor.DEFAULT_CURSOR));
    }//GEN-LAST:event_itmNovoColunaActionPerformed

    private void mnuSairActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnuSairActionPerformed
        dispose();
    }//GEN-LAST:event_mnuSairActionPerformed

    private void itmEditarColunaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_itmEditarColunaActionPerformed
        if (tblColuna.getSelectedRow() != -1) {
            setCursor(Cursor.getPredefinedCursor(Cursor.WAIT_CURSOR));
            carregarDados((Integer) tblColuna.getValueAt(tblColuna.getSelectedRow(), 0));
            novoColuna = false;
            setCursor(Cursor.getPredefinedCursor(Cursor.DEFAULT_CURSOR));
        }
    }//GEN-LAST:event_itmEditarColunaActionPerformed

    private void itmExcluirColunaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_itmExcluirColunaActionPerformed
        if (tblColuna.getSelectedRow() != -1) {
            deletarColuna((Integer) tblColuna.getValueAt(tblColuna.getSelectedRow(), 0));
        }
    }//GEN-LAST:event_itmExcluirColunaActionPerformed

    private void tblColunaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblColunaMouseClicked
        if (evt.getClickCount() == 2) {
            setCursor(Cursor.getPredefinedCursor(Cursor.WAIT_CURSOR));
            carregarDados((Integer) tblColuna.getValueAt(tblColuna.getSelectedRow(), 0));
            novoColuna = false;
            setCursor(Cursor.getPredefinedCursor(Cursor.DEFAULT_CURSOR));
        }
    }//GEN-LAST:event_tblColunaMouseClicked

    private void tblColunaKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tblColunaKeyReleased
        if (tblColuna.getSelectedRow() != -1) {
            if (evt.getKeyCode() == KeyEvent.VK_DELETE) {
                deletarColuna((Integer) tblColuna.getValueAt(tblColuna.getSelectedRow(), 0));
            }
        }
    }//GEN-LAST:event_tblColunaKeyReleased

    private void txtPesquisarColunaKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtPesquisarColunaKeyReleased
        TableRowSorter sorter = null;
        DefaultTableModel model = (DefaultTableModel) tblColuna.getModel();
        sorter = new TableRowSorter<>(model);
        tblColuna.setRowSorter(sorter);
        String text = txtPesquisarColuna.getText().trim().toUpperCase();
        String parametro = "*";
        if (text.length() == 0) {
            sorter.setRowFilter(null);
        } else if (text.indexOf(parametro) > 0) {
            ArrayList<RowFilter<Object, Object>> andFilters = new ArrayList<>();
            andFilters.add(RowFilter.regexFilter("(?i)" + text.substring(0, text.indexOf(parametro)).trim().toUpperCase()));
            andFilters.add(RowFilter.regexFilter("(?i)" + text.substring(text.indexOf(parametro) + 1, text.length()).trim().toUpperCase()));
            sorter.setRowFilter(RowFilter.andFilter(andFilters));
        } else {
            sorter.setRowFilter(RowFilter.regexFilter("(?i)" + text.toUpperCase()));
        }
    }//GEN-LAST:event_txtPesquisarColunaKeyReleased

    private void btnExcluirColunaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExcluirColunaActionPerformed
        deletarColuna((Integer) tblColuna.getValueAt(tblColuna.getSelectedRow(), 0));
    }//GEN-LAST:event_btnExcluirColunaActionPerformed

    private void btnSalvarColunaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSalvarColunaActionPerformed
        if (cmbFabricante.getSelectedItem().toString().isEmpty() || cmbFabricante.getSelectedItem() == null) {
            JOptionPane.showMessageDialog(null, "Fabricante inválido");
            cmbFabricante.requestFocus();
        } else if (cmbMarca.getSelectedItem().toString().isEmpty() || cmbMarca.getSelectedItem() == null) {
            JOptionPane.showMessageDialog(null, "Marca inválida");
            cmbMarca.requestFocus();
        } else if (txtSerialNumber.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "Número Serial da Coluna inválido");
            txtSerialNumber.requestFocus();
        } else if (txtCodigoSap.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "Código SAP Coluna inválido");
            txtCodigoSap.requestFocus();
        } else if (cmbSetor.getSelectedItem().toString().isEmpty() || cmbSetor.getSelectedItem() == null) {
            JOptionPane.showMessageDialog(null, "Setor inválido");
            cmbSetor.requestFocus();
        } else if (cmbMetodo.getSelectedItem().toString().isEmpty() || cmbMetodo.getSelectedItem() == null) {
            JOptionPane.showMessageDialog(null, "Metodo inválido");
            cmbMetodo.requestFocus();
        } else if (cmbAnalise.getSelectedItem().toString().isEmpty() || cmbAnalise.getSelectedItem() == null) {
            JOptionPane.showMessageDialog(null, "Análise inválida");
            cmbAnalise.requestFocus();
        } else if (cmbFinalidade.getSelectedItem().toString().isEmpty() || cmbFinalidade.getSelectedItem() == null) {
            JOptionPane.showMessageDialog(null, "Finalidade inválida");
            cmbFinalidade.requestFocus();
        } else if (txtDataAtivacao.getDate() == null) {
            JOptionPane.showMessageDialog(null, "Data de Ativação inválida");
            txtDataAtivacao.requestFocus();
        } else if (txtVaga.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "Vaga inválida");
            txtVaga.requestFocus();
        } else if (cmbFase.getSelectedItem().toString().isEmpty() || cmbFase.getSelectedItem() == null) {
            JOptionPane.showMessageDialog(null, "Fase Estácionária inválida");
            cmbFase.requestFocus();
        } else if (cmbTipoColuna.getSelectedItem().toString().isEmpty() || cmbTipoColuna.getSelectedItem() == null) {
            JOptionPane.showMessageDialog(null, "Tipo de Fase Estácionária inválida");
            cmbTipoColuna.requestFocus();
        } else if (cmbTamanho.getSelectedItem().toString().isEmpty() || cmbTamanho.getSelectedItem() == null) {
            JOptionPane.showMessageDialog(null, "Tamanho inválido");
            cmbTamanho.requestFocus();
        } else if (cmbDiametro.getSelectedItem().toString().isEmpty() || cmbDiametro.getSelectedItem() == null) {
            JOptionPane.showMessageDialog(null, "Diâmetro inválido");
            cmbDiametro.requestFocus();
        } else if (cmbParticula.getSelectedItem().toString().isEmpty() || cmbParticula.getSelectedItem() == null) {
            JOptionPane.showMessageDialog(null, "Partícula inválido");
            cmbParticula.requestFocus();
        } else if (txtUsuarioPerfermance.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "Responsável pela a Performance inválido");
            txtUsuarioPerfermance.requestFocus();
        } else if (novoColuna) {
            setCursor(Cursor.getPredefinedCursor(Cursor.WAIT_CURSOR));
            criarColuna();
            setCursor(Cursor.getPredefinedCursor(Cursor.DEFAULT_CURSOR));
        } else {
            setCursor(Cursor.getPredefinedCursor(Cursor.WAIT_CURSOR));
            atulizarColuna();
            setCursor(Cursor.getPredefinedCursor(Cursor.DEFAULT_CURSOR));
        }
    }//GEN-LAST:event_btnSalvarColunaActionPerformed

    private void btnCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelarActionPerformed
        setCursor(Cursor.getPredefinedCursor(Cursor.WAIT_CURSOR));
        fecharDados();
        setCursor(Cursor.getPredefinedCursor(Cursor.DEFAULT_CURSOR));
    }//GEN-LAST:event_btnCancelarActionPerformed

    private void cmbPesquisarSetorItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cmbPesquisarSetorItemStateChanged
        setCursor(Cursor.getPredefinedCursor(Cursor.WAIT_CURSOR));
        readColuna();
        setCursor(Cursor.getPredefinedCursor(Cursor.DEFAULT_CURSOR));
    }//GEN-LAST:event_cmbPesquisarSetorItemStateChanged

    private void cmbPesquisarStatusItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cmbPesquisarStatusItemStateChanged
        setCursor(Cursor.getPredefinedCursor(Cursor.WAIT_CURSOR));
        readColuna();
        setCursor(Cursor.getPredefinedCursor(Cursor.DEFAULT_CURSOR));
    }//GEN-LAST:event_cmbPesquisarStatusItemStateChanged

    private void btnImprimirRelatorioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnImprimirRelatorioActionPerformed
        int dialogResult = JOptionPane.showConfirmDialog(null,
                "Deseja Imprimir Relatorio de Colunas?\nSetor: "
                + ("".equals(cmbPesquisarSetor.getSelectedItem().toString()) ? "Todos" : cmbPesquisarSetor.getSelectedItem().toString())
                + "\nStatus: " + cmbPesquisarStatus.getSelectedItem().toString(), "Aviso", JOptionPane.YES_NO_OPTION);
        if (dialogResult == 0) {
            final FrmCarregando frm = new FrmCarregando();
            frm.setVisible(true);
            Thread t1 = new Thread() {
                @Override
                public void run() {
                    setCursor(Cursor.getPredefinedCursor(Cursor.WAIT_CURSOR));
                    ColunaDAO.printColuna(System.getProperty("user"), cmbPesquisarSetor.getSelectedItem().toString(),
                            (Integer) cmbPesquisarStatus.getSelectedIndex());
                    frm.dispose();
                    setCursor(Cursor.getPredefinedCursor(Cursor.DEFAULT_CURSOR));
                }
            };
            t1.start();
        }
    }//GEN-LAST:event_btnImprimirRelatorioActionPerformed

    private void btnVagaColunaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnVagaColunaActionPerformed
        setCursor(Cursor.getPredefinedCursor(Cursor.WAIT_CURSOR));
        FrmVagaColuna frm = new FrmVagaColuna(null, true);
        frm.setVisible(true);
        setCursor(Cursor.getPredefinedCursor(Cursor.DEFAULT_CURSOR));
    }//GEN-LAST:event_btnVagaColunaActionPerformed

    private void btnDescarteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDescarteActionPerformed
        int dialogResult = JOptionPane.showConfirmDialog(null,
                "Realmente Deseja Descartar Essa Coluna?", "Aviso", JOptionPane.YES_NO_OPTION);
        if (dialogResult == 0) {
            descarteColuna();
        }
    }//GEN-LAST:event_btnDescarteActionPerformed

    private void btnUsuarioPerformanceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUsuarioPerformanceActionPerformed
        setCursor(Cursor.getPredefinedCursor(Cursor.WAIT_CURSOR));
        Usuario user = new Usuario();
        FrmSelecionaUsuario frm = new FrmSelecionaUsuario(null, true, user);
        frm.setVisible(true);
        txtUsuarioPerfermance.setText(user.getUser());
        setCursor(Cursor.getPredefinedCursor(Cursor.DEFAULT_CURSOR));
    }//GEN-LAST:event_btnUsuarioPerformanceActionPerformed

    private void btnProcurarMetodoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnProcurarMetodoActionPerformed
        Metodologia mtd = new Metodologia();
        FrmProcurarMetodologia frm = new FrmProcurarMetodologia(null, true, mtd);
        frm.setVisible(true);
        setCursor(Cursor.getPredefinedCursor(Cursor.WAIT_CURSOR));
        readMetodo();
        setCursor(Cursor.getPredefinedCursor(Cursor.DEFAULT_CURSOR));
        String[] cod_mtd = {mtd.getCod_metodo()};
        cmbMetodo.setSelectedItem(cod_mtd[0]);
    }//GEN-LAST:event_btnProcurarMetodoActionPerformed

    private void btnPerformanceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPerformanceActionPerformed
        int dialogResult = JOptionPane.showConfirmDialog(null, "Deseja realizar a Performance desta Coluna?", "Aviso", JOptionPane.YES_NO_OPTION);
        if (dialogResult == 0) {
            txtDataPerformanceAtivacao.setText(DataHora.DateTimeNow());
        }
    }//GEN-LAST:event_btnPerformanceActionPerformed

    private void cmbMetodoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbMetodoActionPerformed
        if (cmbMetodo.getSelectedIndex() == 1) {
            cmbAnalise.setSelectedIndex(1);
            cmbFinalidade.setSelectedIndex(1);
            txtObsColuna.setText("MULTI-PROPÓSITO");
            cmbAnalise.setEnabled(false);
            cmbFinalidade.setEnabled(false);
        } else {
            cmbAnalise.setEnabled(true);
            cmbFinalidade.setEnabled(true);
        }
    }//GEN-LAST:event_cmbMetodoActionPerformed

    private void btnProcurarFabricanteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnProcurarFabricanteActionPerformed
        ColunaConfig config = new ColunaConfig();
        config.setTipo_coluna_config("Fabricante");
        FrmProcurarColunaConfig frm = new FrmProcurarColunaConfig(null, true, config);
        frm.setVisible(true);
        setCursor(Cursor.getPredefinedCursor(Cursor.WAIT_CURSOR));
        readFabricante();
        setCursor(Cursor.getPredefinedCursor(Cursor.DEFAULT_CURSOR));
        String[] coluna_config = {config.getColuna_config()};
        cmbFabricante.setSelectedItem(coluna_config[0]);
    }//GEN-LAST:event_btnProcurarFabricanteActionPerformed

    private void btnProcurarMarcaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnProcurarMarcaActionPerformed
        ColunaConfig config = new ColunaConfig();
        config.setTipo_coluna_config("Marca");
        FrmProcurarColunaConfig frm = new FrmProcurarColunaConfig(null, true, config);
        frm.setVisible(true);
        setCursor(Cursor.getPredefinedCursor(Cursor.WAIT_CURSOR));
        readMarca();
        setCursor(Cursor.getPredefinedCursor(Cursor.DEFAULT_CURSOR));
        String[] coluna_config = {config.getColuna_config()};
        cmbMarca.setSelectedItem(coluna_config[0]);
    }//GEN-LAST:event_btnProcurarMarcaActionPerformed

    private void btnProcurarFaseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnProcurarFaseActionPerformed
        ColunaConfig config = new ColunaConfig();
        config.setTipo_coluna_config("Fase");
        FrmProcurarColunaConfig frm = new FrmProcurarColunaConfig(null, true, config);
        frm.setVisible(true);
        readFase();
        String[] coluna_config = {config.getColuna_config()};
        cmbFase.setSelectedItem(coluna_config[0]);
    }//GEN-LAST:event_btnProcurarFaseActionPerformed

    private void btnProcurarTipoColunaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnProcurarTipoColunaActionPerformed
        ColunaConfig config = new ColunaConfig();
        config.setTipo_coluna_config("Tipo Coluna");
        FrmProcurarColunaConfig frm = new FrmProcurarColunaConfig(null, true, config);
        frm.setVisible(true);
        readTipo();
        String[] coluna_config = {config.getColuna_config()};
        cmbTipoColuna.setSelectedItem(coluna_config[0]);
    }//GEN-LAST:event_btnProcurarTipoColunaActionPerformed

    private void itmEtiquetaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_itmEtiquetaActionPerformed
        if (tblColuna.getSelectedRow() != -1) {
            int dialogResult = JOptionPane.showConfirmDialog(null,
                    "Deseja Imprimir Etiqueta da Coluna?", "Aviso", JOptionPane.YES_NO_OPTION);
            if (dialogResult == 0) {
                final FrmCarregando frm = new FrmCarregando();
                frm.setVisible(true);
                Thread t1 = new Thread() {
                    @Override
                    public void run() {
                        setCursor(Cursor.getPredefinedCursor(Cursor.WAIT_CURSOR));
                        ColunaDAO.printEtiquetaColuna(tblColuna.getValueAt(tblColuna.getSelectedRow(), 0).toString(),
                                tblColuna.getValueAt(tblColuna.getSelectedRow(), 5).toString());
                        frm.dispose();
                        setCursor(Cursor.getPredefinedCursor(Cursor.DEFAULT_CURSOR));
                    }
                };
                t1.start();
            }
        }
    }//GEN-LAST:event_itmEtiquetaActionPerformed

    private void itmRelatorioGeralActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_itmRelatorioGeralActionPerformed
        int dialogResult = JOptionPane.showConfirmDialog(null,
                "Deseja Imprimir Relatorio de Colunas?\nSetor: "
                + ("".equals(cmbPesquisarSetor.getSelectedItem().toString()) ? "Todos" : cmbPesquisarSetor.getSelectedItem().toString())
                + "\nStatus: " + cmbPesquisarStatus.getSelectedItem().toString(), "Aviso", JOptionPane.YES_NO_OPTION);
        if (dialogResult == 0) {
            final FrmCarregando frm = new FrmCarregando();
            frm.setVisible(true);
            Thread t1 = new Thread() {
                @Override
                public void run() {
                    setCursor(Cursor.getPredefinedCursor(Cursor.WAIT_CURSOR));
                    ColunaDAO.printColuna(System.getProperty("user"), cmbPesquisarSetor.getSelectedItem().toString(),
                            (Integer) cmbPesquisarStatus.getSelectedIndex());
                    frm.dispose();
                    setCursor(Cursor.getPredefinedCursor(Cursor.DEFAULT_CURSOR));
                }
            };
            t1.start();
        }
    }//GEN-LAST:event_itmRelatorioGeralActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCancelar;
    private javax.swing.JButton btnDescarte;
    public static javax.swing.JButton btnExcluirColuna;
    private javax.swing.JButton btnImprimirRelatorio;
    private javax.swing.JButton btnPerformance;
    private javax.swing.JButton btnProcurarFabricante;
    private javax.swing.JButton btnProcurarFase;
    private javax.swing.JButton btnProcurarMarca;
    private javax.swing.JButton btnProcurarMetodo;
    private javax.swing.JButton btnProcurarTipoColuna;
    public static javax.swing.JButton btnSalvarColuna;
    private javax.swing.JButton btnUsuarioPerformance;
    private javax.swing.JButton btnVagaColuna;
    private javax.swing.JComboBox cmbAnalise;
    private javax.swing.JComboBox cmbDiametro;
    private javax.swing.JComboBox cmbFabricante;
    private javax.swing.JComboBox cmbFase;
    private javax.swing.JComboBox cmbFinalidade;
    private javax.swing.JComboBox cmbMarca;
    private javax.swing.JComboBox cmbMetodo;
    private javax.swing.JComboBox cmbParticula;
    private javax.swing.JComboBox cmbPesquisarSetor;
    private javax.swing.JComboBox<String> cmbPesquisarStatus;
    private javax.swing.JComboBox cmbSetor;
    private javax.swing.JComboBox cmbTamanho;
    private javax.swing.JComboBox cmbTipoColuna;
    public static javax.swing.JMenuItem itmEditarColuna;
    public static javax.swing.JMenuItem itmEtiqueta;
    public static javax.swing.JMenuItem itmExcluirColuna;
    public static javax.swing.JMenuItem itmNovoColuna;
    private javax.swing.JMenuItem itmRelatorioGeral;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel31;
    private javax.swing.JLabel jLabel32;
    private javax.swing.JLabel jLabel33;
    private javax.swing.JLabel jLabel34;
    private javax.swing.JLabel jLabel35;
    private javax.swing.JLabel jLabel36;
    private javax.swing.JLabel jLabel37;
    private javax.swing.JLabel jLabel38;
    private javax.swing.JLabel jLabel39;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel40;
    private javax.swing.JLabel jLabel42;
    private javax.swing.JLabel jLabel43;
    private javax.swing.JLabel jLabel44;
    private javax.swing.JLabel jLabel45;
    private javax.swing.JLabel jLabel46;
    private javax.swing.JLabel jLabel47;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JMenu mnuArquivo;
    public static javax.swing.JMenu mnuEditColuna;
    private javax.swing.JMenu mnuImpressao;
    public static javax.swing.JMenu mnuNovoColuna;
    private javax.swing.JMenuItem mnuSair;
    private javax.swing.JPanel pnlColuna;
    private javax.swing.JTabbedPane pnlColunas;
    private javax.swing.JPanel pnlDados;
    private javax.swing.JTable tblColuna;
    private javax.swing.JTextField txtCodigoSap;
    private com.toedter.calendar.JDateChooser txtDataAtivacao;
    private javax.swing.JTextField txtDataDescarte;
    private javax.swing.JTextField txtDataPerformanceAtivacao;
    private javax.swing.JTextField txtObsColuna;
    private javax.swing.JTextField txtPartNumber;
    private javax.swing.JTextField txtPesquisarColuna;
    private javax.swing.JTextField txtSerialNumber;
    public static javax.swing.JTextField txtUsuarioDescarte;
    public static javax.swing.JTextField txtUsuarioPerfermance;
    public static javax.swing.JTextField txtVaga;
    // End of variables declaration//GEN-END:variables

    public final void readColuna() {
        DefaultTableModel model = (DefaultTableModel) tblColuna.getModel();
        ColunaDAO colDao = new ColunaDAO();
        model.setNumRows(0);
        int status = cmbPesquisarStatus.getSelectedIndex();
        String setor = cmbPesquisarSetor.getSelectedItem().toString();
        for (Coluna col : colDao.readColuna(setor, status)) {
            model.addRow(new Object[]{
                col.getColuna_id(),
                "CQ-"
                + col.getTipo_coluna()
                + "-" + zeros.substring(String.valueOf(col.getCodigo_coluna()).length())
                + String.valueOf(col.getCodigo_coluna()),
                col.getFabricante_coluna() + " "
                + col.getMarca_coluna() + " - "
                + col.getTipo_coluna() + " "
                + col.getTamanho_coluna() + "mm x "
                + col.getDiametro_coluna() + "mm x "
                + col.getParticula_coluna() + "um ",
                col.getMetodologia().getCod_metodo(),
                col.getCodigo_sap_coluna(),
                col.getVaga_coluna() == 0 ? "Descartada"
                : ("Gaveta: " + (int) Math.ceil((double) col.getVaga_coluna() / 19)
                + " - Vaga: " + col.getVaga_coluna()),
                DataHora.getStringDate(col.getData_ativacao_coluna()),
                col.getObs_coluna(),
                col.getPart_number_coluna(),
                col.getSerial_number_coluna(),
                col.getMetodologia().getMetodo()
            });
        }
    }

    public final void readSetor() {
        cmbSetor.removeAllItems();
        cmbSetor.addItem("");
        categoryMapSetor.clear();
        SetorDAO setorDao = new SetorDAO();
        for (Setor setor : setorDao.readSetor()) {
            if (setor.getSigla_setor().startsWith("HPLC")) {
                Integer id = setor.getSetor_id();
                String name = setor.getSigla_setor();
                cmbSetor.addItem(name);
                categoryMapSetor.put(id, name);
            }
        }
    }

    public final void readSetorPesquisar() {
        cmbPesquisarSetor.removeAllItems();
        cmbPesquisarSetor.addItem("Todos");
        categoryMapSetorPesquisar.clear();
        SetorDAO setorDao = new SetorDAO();
        for (Setor setor : setorDao.readSetor()) {
            if (setor.getSigla_setor().startsWith("HPLC")) {
                Integer id = setor.getSetor_id();
                String name = setor.getSigla_setor();
                cmbPesquisarSetor.addItem(name);
                categoryMapSetorPesquisar.put(id, name);
            }
        }
    }

    public void readMetodo() {
        cmbMetodo.removeAllItems();
        cmbMetodo.addItem("");
        cmbMetodo.addItem("MULTIPROPÓSITO");
        categoryMapMetodo.clear();
        MetodologiaDAO mtdDao = new MetodologiaDAO();
        for (Metodologia mtd : mtdDao.read()) {
            Integer id = mtd.getMetodo_id();
            String name = mtd.getCod_metodo();
            cmbMetodo.addItem(name);
            categoryMapMetodo.put(id, name);
        }
    }

    public final void readFinalidade() {
        cmbFinalidade.removeAllItems();
        cmbFinalidade.addItem("");
        cmbFinalidade.addItem("MULTIPROPÓSITO");
        categoryMapFinalidade.clear();
        AnaliseDAO anlsDao = new AnaliseDAO();
        for (Analise anls : anlsDao.readAnaliseFinalidade()) {
            Integer id = anls.getAnalise_finalidade_id();
            String name = anls.getAnalise_finalidade();
            cmbFinalidade.addItem(name);
            categoryMapFinalidade.put(id, name);
        }
    }

    public final void readAnalise() {
        cmbAnalise.removeAllItems();
        cmbAnalise.addItem("");
        cmbAnalise.addItem("MULTIPROPÓSITO");
        categoryMapAnalise.clear();
        AnaliseDAO anlsDao = new AnaliseDAO();
        for (Analise anls : anlsDao.readAnalise()) {
            Integer id = anls.getAnalise_id();
            String name = anls.getAnalise();
            cmbAnalise.addItem(name);
            categoryMapAnalise.put(id, name);
        }
    }

    public final void readFabricante() {
        cmbFabricante.removeAllItems();
        cmbFabricante.addItem("");
        ColunaConfigDAO configDao = new ColunaConfigDAO();
        for (ColunaConfig config : configDao.readColunaConfig("Fabricante")) {
            cmbFabricante.addItem(config.getColuna_config());
        }
    }

    public final void readMarca() {
        cmbMarca.removeAllItems();
        cmbMarca.addItem("");
        ColunaConfigDAO configDao = new ColunaConfigDAO();
        for (ColunaConfig config : configDao.readColunaConfig("Marca")) {
            cmbMarca.addItem(config.getColuna_config());
        }
    }

    public final void readTipo() {
        cmbTipoColuna.removeAllItems();
        cmbTipoColuna.addItem("");
        ColunaConfigDAO configDao = new ColunaConfigDAO();
        for (ColunaConfig config : configDao.readColunaConfig("Tipo Coluna")) {
            cmbTipoColuna.addItem(config.getColuna_config());
        }
    }

    public final void readTamanho() {
        cmbTamanho.removeAllItems();
        cmbTamanho.addItem("");
        ColunaConfigDAO configDao = new ColunaConfigDAO();
        for (ColunaConfig config : configDao.readColunaConfig("Tamanho")) {
            cmbTamanho.addItem(config.getColuna_config());
        }
    }

    public final void readDiametro() {
        cmbDiametro.removeAllItems();
        cmbDiametro.addItem("");
        ColunaConfigDAO configDao = new ColunaConfigDAO();
        for (ColunaConfig config : configDao.readColunaConfig("Diametro")) {
            cmbDiametro.addItem(config.getColuna_config());
        }
    }

    public final void readParticula() {
        cmbParticula.removeAllItems();
        cmbParticula.addItem("");
        ColunaConfigDAO configDao = new ColunaConfigDAO();
        for (ColunaConfig config : configDao.readColunaConfig("Particula")) {
            cmbParticula.addItem(config.getColuna_config());
        }
    }

    public final void readFase() {
        cmbFase.removeAllItems();
        cmbFase.addItem("");
        ColunaConfigDAO configDao = new ColunaConfigDAO();
        for (ColunaConfig config : configDao.readColunaConfig("Fase")) {
            cmbFase.addItem(config.getColuna_config());
        }
    }

    private void limparCampos() {
        txtCodigoSap.setText(null);
        txtDataAtivacao.setDate(null);
        txtDataPerformanceAtivacao.setText(null);
        txtDataDescarte.setText(null);
        txtObsColuna.setText(null);
        txtSerialNumber.setText(null);
        txtPartNumber.setText(null);
        txtVaga.setText(null);
        txtUsuarioPerfermance.setText(null);
        txtUsuarioDescarte.setText(null);
    }

    private void criarColuna() {
        Coluna col = new Coluna();
        ColunaDAO colDAO = new ColunaDAO();
        try {
            Usuario user = new Usuario();
            Analise anls = new Analise();
            Setor setor = new Setor();
            Metodologia mtd = new Metodologia();
            col.setCodigo_sap_coluna(txtCodigoSap.getText());
            setor.setSetor_id(ComboBox.getKeyForValue(cmbSetor.getSelectedItem().toString(), categoryMapSetor));
            col.setSetor(setor);
            if ("MULTIPROPÓSITO".equals(cmbMetodo.getSelectedItem().toString())) {
                mtd.setMetodo_id(0);
            } else {
                mtd.setMetodo_id(ComboBox.getKeyForValue(cmbMetodo.getSelectedItem().toString(), categoryMapMetodo));
            }
            col.setMetodologia(mtd);
            if ("MULTIPROPÓSITO".equals(cmbAnalise.getSelectedItem().toString())) {
                anls.setAnalise_id(0);
            } else {
                anls.setAnalise_id(ComboBox.getKeyForValue(cmbAnalise.getSelectedItem().toString(), categoryMapAnalise));
            }
            if ("MULTIPROPÓSITO".equals(cmbFinalidade.getSelectedItem().toString())) {
                anls.setAnalise_finalidade_id(0);
            } else {
                anls.setAnalise_finalidade_id(ComboBox.getKeyForValue(cmbFinalidade.getSelectedItem().toString(), categoryMapFinalidade));
            }
            col.setAnalise(anls);
            col.setFabricante_coluna(cmbFabricante.getSelectedItem().toString());
            col.setMarca_coluna(cmbMarca.getSelectedItem().toString());
            col.setTipo_coluna(cmbTipoColuna.getSelectedItem().toString());
            col.setFase_coluna(cmbFase.getSelectedItem().toString());
            col.setTamanho_coluna(cmbTamanho.getSelectedItem().toString());
            col.setDiametro_coluna(cmbDiametro.getSelectedItem().toString());
            col.setParticula_coluna(cmbParticula.getSelectedItem().toString());
            col.setPart_number_coluna(txtPartNumber.getText().toUpperCase());
            col.setSerial_number_coluna(txtSerialNumber.getText().toUpperCase());
            col.setData_ativacao_coluna(new Timestamp(txtDataAtivacao.getDate().getTime()));
            col.setData_performance(DataHora.getTimestampDate(txtDataPerformanceAtivacao.getText()));
            col.setData_descarte_coluna(DataHora.getTimestampDate(txtDataDescarte.getText()));
            col.setVaga_coluna(Integer.parseInt(txtVaga.getText()));
            col.setObs_coluna(txtObsColuna.getText().toUpperCase());
            user.setUser(System.getProperty("user"));
            col.setUser_ativacao(user);
            user.setUser(txtUsuarioPerfermance.getText());
            col.setUser_performance(user);
            colDAO.selectUltimaColuna(col);
            colDAO.createColuna(col);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Erro ao gravar dados: " + e);
        } finally {
            fecharDados();
        }
    }

    private void fecharDados() {
        pnlColunas.setEnabledAt(0, true);
        pnlColunas.setEnabledAt(1, false);
        pnlColunas.setSelectedIndex(0);
        mnuNovoColuna.setEnabled(true);
        mnuEditColuna.setEnabled(true);
        mnuImpressao.setEnabled(true);
        tblColuna.setRowSorter(null);
        btnUsuarioPerformance.setEnabled(false);
        cmbTipoColuna.setEnabled(false);
        btnProcurarTipoColuna.setEnabled(false);
        ColunaAcesso Acesso = new ColunaAcesso();
        Acesso.verificarAcessoColuna();
        limparCampos();
        readColuna();
    }

    private void abrirDados() {
        ColunaAcesso Acesso = new ColunaAcesso();
        if (Acesso.verificarAbrirDadosColuna()) {
            pnlColunas.setEnabledAt(0, false);
            pnlColunas.setEnabledAt(1, true);
            pnlColunas.setSelectedIndex(1);
            btnDescarte.setEnabled(false);
            mnuNovoColuna.setEnabled(false);
            mnuEditColuna.setEnabled(false);
            mnuImpressao.setEnabled(false);
            btnExcluirColuna.setVisible(false);
            txtDataAtivacao.setEnabled(true);
            txtDataPerformanceAtivacao.setEnabled(true);
            cmbTipoColuna.setEnabled(true);
            btnProcurarTipoColuna.setEnabled(true);
            btnVagaColuna.setEnabled(true);
            btnDescarte.setEnabled(false);
            btnPerformance.setEnabled(true);
            btnUsuarioPerformance.setEnabled(true);
            limparCampos();
            novoColuna = true;
            readSetor();
            readMetodo();
            readSetor();
            readMetodo();
            readAnalise();
            readFinalidade();
            readFabricante();
            readMarca();
            readTipo();
            readTamanho();
            readDiametro();
            readParticula();
            readFase();
        }
    }

    private void carregarDados(int id) {
        ColunaAcesso Acesso = new ColunaAcesso();
        if (Acesso.verificarCarregarDadosColuna()) {
            readSetor();
            readMetodo();
            readSetor();
            readMetodo();
            readAnalise();
            readFinalidade();
            readFabricante();
            readMarca();
            readTipo();
            readTamanho();
            readDiametro();
            readParticula();
            readFase();
            btnDescarte.setEnabled(true);
            btnPerformance.setEnabled(true);
            btnUsuarioPerformance.setEnabled(false);
            cmbTipoColuna.setEnabled(false);
            btnProcurarTipoColuna.setEnabled(false);
            txtDataAtivacao.setEnabled(false);
            btnExcluirColuna.setVisible(true);
            mnuImpressao.setEnabled(false);
            btnVagaColuna.setEnabled(true);
            Coluna col = new Coluna();
            col.setColuna_id(id);
            ColunaDAO colDao = new ColunaDAO();
            colDao.selectColuna(col);
            txtCodigoSap.setText(String.valueOf(col.getCodigo_sap_coluna()));
            String[] setor = {col.getSetor().getSigla_setor()};
            cmbSetor.setSelectedItem(setor[0]);
            String[] mtd = {col.getMetodologia().getCod_metodo()};
            cmbMetodo.setSelectedItem(mtd[0]);
            String[] anls = {col.getAnalise().getAnalise()};
            cmbAnalise.setSelectedItem(anls[0]);
            String[] finalidade = {col.getAnalise().getAnalise_finalidade()};
            cmbFinalidade.setSelectedItem(finalidade[0]);
            String[] fab = {col.getFabricante_coluna()};
            cmbFabricante.setSelectedItem(fab[0]);
            String[] marca = {col.getMarca_coluna()};
            cmbMarca.setSelectedItem(marca[0]);
            String[] tipocoluna = {col.getTipo_coluna()};
            cmbTipoColuna.setSelectedItem(tipocoluna[0]);
            String[] fase = {col.getFase_coluna()};
            cmbFase.setSelectedItem(fase[0]);
            String[] tamanho = {col.getTamanho_coluna()};
            cmbTamanho.setSelectedItem(tamanho[0]);
            String[] diametro = {col.getDiametro_coluna()};
            cmbDiametro.setSelectedItem(diametro[0]);
            String[] particula = {col.getParticula_coluna()};
            cmbParticula.setSelectedItem(particula[0]);
            txtPartNumber.setText(col.getPart_number_coluna().toUpperCase());
            txtSerialNumber.setText(col.getSerial_number_coluna().toUpperCase());
            txtVaga.setText(String.valueOf(col.getVaga_coluna()));
            txtObsColuna.setText(col.getObs_coluna().toUpperCase());
            txtDataAtivacao.setDate(DataHora.getTimestampDate(col.getData_ativacao_coluna()));
            txtDataPerformanceAtivacao.setText(DataHora.getStringDateTime(col.getData_performance()));
            txtUsuarioPerfermance.setText(col.getUser_performance().getUser());
            txtDataDescarte.setText(DataHora.getStringDateTime(col.getData_descarte_coluna()));
            txtUsuarioDescarte.setText(col.getUser_descarte().getUser());
            if (!txtDataDescarte.getText().isEmpty()) {
                btnDescarte.setEnabled(false);
                btnVagaColuna.setEnabled(false);
                btnPerformance.setEnabled(false);
                btnUsuarioPerformance.setEnabled(false);
            }
            pnlColunas.setEnabledAt(0, false);
            pnlColunas.setEnabledAt(1, true);
            pnlColunas.setSelectedIndex(1);
            mnuNovoColuna.setEnabled(true);
            mnuEditColuna.setEnabled(false);
        }
    }

    private void atulizarColuna() {
        Coluna col = new Coluna();
        ColunaDAO colDAO = new ColunaDAO();
        try {
            Usuario user = new Usuario();
            Analise anls = new Analise();
            Setor setor = new Setor();
            Metodologia mtd = new Metodologia();
            col.setColuna_id((Integer) tblColuna.getValueAt(tblColuna.getSelectedRow(), 0));
            col.setCodigo_sap_coluna(txtCodigoSap.getText());
            setor.setSetor_id(ComboBox.getKeyForValue(cmbSetor.getSelectedItem().toString(), categoryMapSetor));
            col.setSetor(setor);
            mtd.setMetodo_id(ComboBox.getKeyForValue(cmbMetodo.getSelectedItem().toString(), categoryMapMetodo));
            col.setMetodologia(mtd);
            anls.setAnalise_id(ComboBox.getKeyForValue(cmbAnalise.getSelectedItem().toString(), categoryMapAnalise));
            anls.setAnalise_finalidade_id(ComboBox.getKeyForValue(cmbFinalidade.getSelectedItem().toString(), categoryMapFinalidade));
            col.setAnalise(anls);
            col.setFabricante_coluna(cmbFabricante.getSelectedItem().toString());
            col.setMarca_coluna(cmbMarca.getSelectedItem().toString());
            col.setTipo_coluna(cmbTipoColuna.getSelectedItem().toString());
            col.setFase_coluna(cmbFase.getSelectedItem().toString());
            col.setTamanho_coluna(cmbTamanho.getSelectedItem().toString());
            col.setDiametro_coluna(cmbDiametro.getSelectedItem().toString());
            col.setParticula_coluna(cmbParticula.getSelectedItem().toString());
            col.setPart_number_coluna(txtPartNumber.getText().toUpperCase());
            col.setSerial_number_coluna(txtSerialNumber.getText().toUpperCase());
            col.setVaga_coluna(Integer.parseInt(txtVaga.getText()));
            if (!txtDataPerformanceAtivacao.getText().isEmpty()) {
                col.setData_performance(DataHora.getTimestampDate(txtDataPerformanceAtivacao.getText()));
            } else {
                col.setData_performance(null);
            }
            user.setUser(txtUsuarioPerfermance.getText());
            col.setUser_performance(user);
            col.setObs_coluna(txtObsColuna.getText().toUpperCase());
            colDAO.updateColuna(col);
        } catch (NumberFormatException | HeadlessException e) {
            JOptionPane.showMessageDialog(null, "Erro ao atualizar dados: " + e);
        } finally {
            fecharDados();
        }
    }

    private void descarteColuna() {
        Coluna col = new Coluna();
        ColunaDAO colDAO = new ColunaDAO();
        try {
            Usuario user = new Usuario();
            col.setColuna_id((Integer) tblColuna.getValueAt(tblColuna.getSelectedRow(), 0));
            col.setData_descarte_coluna(DataHora.getTimestampDate(new Date()));
            user.setUser(System.getProperty("user"));
            col.setUser_descarte(user);
            col.setVaga_coluna(0);
            colDAO.updateDescarteColuna(col);
        } catch (NumberFormatException | HeadlessException e) {
            JOptionPane.showMessageDialog(null, "Erro ao atualizar dados: " + e);
        } finally {
            fecharDados();
        }
    }

    private void deletarColuna(int id) {
        ColunaAcesso Acesso = new ColunaAcesso();
        if (Acesso.verificarDeletarDadosColuna()) {
            Coluna col = new Coluna();
            ColunaDAO colDAO = new ColunaDAO();
            try {
                int dialogResult = JOptionPane.showConfirmDialog(null, "Realmente Deseja Excluir Esse Coluna?", "Aviso", JOptionPane.YES_NO_OPTION);
                if (dialogResult == 0) {
                    col.setColuna_id(id);
                    setCursor(Cursor.getPredefinedCursor(Cursor.WAIT_CURSOR));
                    colDAO.deleteColuna(col);
                    setCursor(Cursor.getPredefinedCursor(Cursor.DEFAULT_CURSOR));
                }
            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, "Erro ao atulalizar dados: " + e);
            } finally {
                fecharDados();
            }
        }
    }

}
