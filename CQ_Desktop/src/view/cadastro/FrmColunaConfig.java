package view.cadastro;

import DAO.ColunaConfigDAO;
import model.ColunaConfig;
import java.awt.HeadlessException;
import java.awt.event.KeyEvent;
import javax.swing.JOptionPane;
import javax.swing.RowFilter;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableRowSorter;

/**
 *
 * @author rafael
 */
public class FrmColunaConfig extends javax.swing.JInternalFrame {
    
    private boolean novoColunaConfig = false;

    /**
     * Creates new form NovoJInternalFrame
     */
    public FrmColunaConfig() {
        initComponents();
        setTitle("Configurações de Coluna Cromatográfica");
        pnlConfigColuna.setEnabledAt(1, false);
        readColunaConfig();
        readTipo();
    }


    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pnlConfigColuna = new javax.swing.JTabbedPane();
        pnlConfiguraConfigColuna = new javax.swing.JPanel();
        jPanel5 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblConfigColuna = new javax.swing.JTable();
        txtPesquisarConfigColuna = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        pnlDadosConfigColuna = new javax.swing.JPanel();
        jPanel7 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        txtValorConfigColuna = new javax.swing.JTextField();
        txtDescricaoConfigColuna = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel22 = new javax.swing.JLabel();
        cmbTipoConfigColuna = new javax.swing.JComboBox();
        btnExcluirConfigColuna = new javax.swing.JButton();
        btnSalvarConfigColuna = new javax.swing.JButton();
        btnCancelar = new javax.swing.JButton();
        jMenuBar1 = new javax.swing.JMenuBar();
        mnuArquivo = new javax.swing.JMenu();
        mnuNovoConfigColuna = new javax.swing.JMenu();
        itmNovoConfigColuna = new javax.swing.JMenuItem();
        mnuSair = new javax.swing.JMenuItem();
        mnuEditarConfigColuna = new javax.swing.JMenu();
        itmEditarConfigColuna = new javax.swing.JMenuItem();
        itmExcluirConfigColuna = new javax.swing.JMenuItem();

        jPanel5.setBorder(javax.swing.BorderFactory.createTitledBorder("Valores"));

        tblConfigColuna.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Id", "Tipo", "Valor", "Descrição"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblConfigColuna.setSurrendersFocusOnKeystroke(true);
        tblConfigColuna.getTableHeader().setReorderingAllowed(false);
        tblConfigColuna.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblConfigColunaMouseClicked(evt);
            }
        });
        tblConfigColuna.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                tblConfigColunaKeyReleased(evt);
            }
        });
        jScrollPane1.setViewportView(tblConfigColuna);
        if (tblConfigColuna.getColumnModel().getColumnCount() > 0) {
            tblConfigColuna.getColumnModel().getColumn(0).setPreferredWidth(50);
            tblConfigColuna.getColumnModel().getColumn(0).setMaxWidth(50);
            tblConfigColuna.getColumnModel().getColumn(1).setPreferredWidth(120);
            tblConfigColuna.getColumnModel().getColumn(1).setMaxWidth(120);
            tblConfigColuna.getColumnModel().getColumn(2).setPreferredWidth(300);
            tblConfigColuna.getColumnModel().getColumn(2).setMaxWidth(300);
        }

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 751, Short.MAX_VALUE)
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 351, Short.MAX_VALUE)
        );

        txtPesquisarConfigColuna.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtPesquisarConfigColunaKeyReleased(evt);
            }
        });

        jLabel4.setText("Pesquisar:");

        javax.swing.GroupLayout pnlConfiguraConfigColunaLayout = new javax.swing.GroupLayout(pnlConfiguraConfigColuna);
        pnlConfiguraConfigColuna.setLayout(pnlConfiguraConfigColunaLayout);
        pnlConfiguraConfigColunaLayout.setHorizontalGroup(
            pnlConfiguraConfigColunaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlConfiguraConfigColunaLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlConfiguraConfigColunaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlConfiguraConfigColunaLayout.createSequentialGroup()
                        .addGap(8, 8, 8)
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtPesquisarConfigColuna))
                    .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        pnlConfiguraConfigColunaLayout.setVerticalGroup(
            pnlConfiguraConfigColunaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlConfiguraConfigColunaLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlConfiguraConfigColunaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtPesquisarConfigColuna, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pnlConfigColuna.addTab("Configurações", pnlConfiguraConfigColuna);

        pnlDadosConfigColuna.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jPanel7.setBorder(javax.swing.BorderFactory.createTitledBorder("Configuração"));

        jLabel2.setText("Valor:");

        jLabel3.setText("Descrição:");

        jLabel22.setText("Tipo:");

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel3))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel7Layout.createSequentialGroup()
                        .addGap(30, 30, 30)
                        .addComponent(jLabel22, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtDescricaoConfigColuna, javax.swing.GroupLayout.DEFAULT_SIZE, 667, Short.MAX_VALUE)
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addComponent(cmbTipoConfigColuna, javax.swing.GroupLayout.PREFERRED_SIZE, 211, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtValorConfigColuna)))
                .addContainerGap())
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txtValorConfigColuna, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel22)
                    .addComponent(cmbTipoConfigColuna, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(txtDescricaoConfigColuna, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        btnExcluirConfigColuna.setText("Excuir");
        btnExcluirConfigColuna.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExcluirConfigColunaActionPerformed(evt);
            }
        });

        btnSalvarConfigColuna.setText("Ok");
        btnSalvarConfigColuna.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSalvarConfigColunaActionPerformed(evt);
            }
        });

        btnCancelar.setText("Cancelar");
        btnCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlDadosConfigColunaLayout = new javax.swing.GroupLayout(pnlDadosConfigColuna);
        pnlDadosConfigColuna.setLayout(pnlDadosConfigColunaLayout);
        pnlDadosConfigColunaLayout.setHorizontalGroup(
            pnlDadosConfigColunaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlDadosConfigColunaLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlDadosConfigColunaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(pnlDadosConfigColunaLayout.createSequentialGroup()
                        .addComponent(btnExcluirConfigColuna, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnSalvarConfigColuna, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnCancelar, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        pnlDadosConfigColunaLayout.setVerticalGroup(
            pnlDadosConfigColunaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlDadosConfigColunaLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 282, Short.MAX_VALUE)
                .addGroup(pnlDadosConfigColunaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnCancelar)
                    .addComponent(btnSalvarConfigColuna)
                    .addComponent(btnExcluirConfigColuna))
                .addContainerGap())
        );

        pnlConfigColuna.addTab("Dados", pnlDadosConfigColuna);

        mnuArquivo.setText("Arquivo");

        mnuNovoConfigColuna.setText("Novo");

        itmNovoConfigColuna.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_INSERT, java.awt.event.InputEvent.ALT_MASK));
        itmNovoConfigColuna.setText("Valor");
        itmNovoConfigColuna.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                itmNovoConfigColunaActionPerformed(evt);
            }
        });
        mnuNovoConfigColuna.add(itmNovoConfigColuna);

        mnuArquivo.add(mnuNovoConfigColuna);

        mnuSair.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_F4, java.awt.event.InputEvent.SHIFT_MASK));
        mnuSair.setText("Sair");
        mnuSair.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnuSairActionPerformed(evt);
            }
        });
        mnuArquivo.add(mnuSair);

        jMenuBar1.add(mnuArquivo);

        mnuEditarConfigColuna.setText("Editar");

        itmEditarConfigColuna.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_ENTER, java.awt.event.InputEvent.ALT_MASK));
        itmEditarConfigColuna.setText("Editar");
        itmEditarConfigColuna.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                itmEditarConfigColunaActionPerformed(evt);
            }
        });
        mnuEditarConfigColuna.add(itmEditarConfigColuna);

        itmExcluirConfigColuna.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_DELETE, java.awt.event.InputEvent.ALT_MASK));
        itmExcluirConfigColuna.setText("Excluir");
        itmExcluirConfigColuna.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                itmExcluirConfigColunaActionPerformed(evt);
            }
        });
        mnuEditarConfigColuna.add(itmExcluirConfigColuna);

        jMenuBar1.add(mnuEditarConfigColuna);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pnlConfigColuna, javax.swing.GroupLayout.Alignment.TRAILING)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pnlConfigColuna, javax.swing.GroupLayout.Alignment.TRAILING)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void tblConfigColunaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblConfigColunaMouseClicked
        if (evt.getClickCount() == 2) {
            carregarDados((Integer) tblConfigColuna.getValueAt(tblConfigColuna.getSelectedRow(), 0));
            novoColunaConfig = false;
        }
    }//GEN-LAST:event_tblConfigColunaMouseClicked

    private void txtPesquisarConfigColunaKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtPesquisarConfigColunaKeyReleased
        TableRowSorter sorter = null;
        DefaultTableModel model = (DefaultTableModel) tblConfigColuna.getModel();
        sorter = new TableRowSorter<>(model);
        tblConfigColuna.setRowSorter(sorter);
        String text = txtPesquisarConfigColuna.getText().trim();
        if (text.length() == 0) {
            sorter.setRowFilter(null);
        } else {
            sorter.setRowFilter(RowFilter.regexFilter("(?i)" + text));
        }
    }//GEN-LAST:event_txtPesquisarConfigColunaKeyReleased

    private void btnExcluirConfigColunaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExcluirConfigColunaActionPerformed
        deletarDados((Integer) tblConfigColuna.getValueAt(tblConfigColuna.getSelectedRow(), 0));
    }//GEN-LAST:event_btnExcluirConfigColunaActionPerformed

    private void btnSalvarConfigColunaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSalvarConfigColunaActionPerformed
        if (cmbTipoConfigColuna.getSelectedItem().toString().isEmpty()) {
            JOptionPane.showMessageDialog(null, "Tipo de Valor inválido");
            cmbTipoConfigColuna.requestFocus();
        } else if (txtValorConfigColuna.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "Valor inválid");
            txtValorConfigColuna.requestFocus();
        } else if (txtDescricaoConfigColuna.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "Descrição inválida");
            txtDescricaoConfigColuna.requestFocus();
        } else if (novoColunaConfig) {
            criarColunaConfig();
        } else {
            atulizarColunaConfig();
        }
    }//GEN-LAST:event_btnSalvarConfigColunaActionPerformed

    private void btnCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelarActionPerformed
        fecharDados();
    }//GEN-LAST:event_btnCancelarActionPerformed

    private void mnuSairActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnuSairActionPerformed
        dispose();
    }//GEN-LAST:event_mnuSairActionPerformed

    private void itmEditarConfigColunaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_itmEditarConfigColunaActionPerformed
        if (tblConfigColuna.getSelectedRow() != -1) {
            carregarDados((Integer) tblConfigColuna.getValueAt(tblConfigColuna.getSelectedRow(), 0));
            novoColunaConfig = false;
        }
    }//GEN-LAST:event_itmEditarConfigColunaActionPerformed

    private void itmExcluirConfigColunaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_itmExcluirConfigColunaActionPerformed
        if (tblConfigColuna.getSelectedRow() != -1) {
            deletarDados((Integer) tblConfigColuna.getValueAt(tblConfigColuna.getSelectedRow(), 0));
        }
    }//GEN-LAST:event_itmExcluirConfigColunaActionPerformed

    private void itmNovoConfigColunaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_itmNovoConfigColunaActionPerformed
        abrirDados();
    }//GEN-LAST:event_itmNovoConfigColunaActionPerformed

    private void tblConfigColunaKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tblConfigColunaKeyReleased
        if (tblConfigColuna.getSelectedRow() != -1) {
            if (evt.getKeyCode() == KeyEvent.VK_DELETE) {
                deletarDados((Integer) tblConfigColuna.getValueAt(tblConfigColuna.getSelectedRow(), 0));
            }
        }
    }//GEN-LAST:event_tblConfigColunaKeyReleased


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCancelar;
    public static javax.swing.JButton btnExcluirConfigColuna;
    public static javax.swing.JButton btnSalvarConfigColuna;
    private javax.swing.JComboBox cmbTipoConfigColuna;
    public static javax.swing.JMenuItem itmEditarConfigColuna;
    public static javax.swing.JMenuItem itmExcluirConfigColuna;
    public static javax.swing.JMenuItem itmNovoConfigColuna;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JMenu mnuArquivo;
    public static javax.swing.JMenu mnuEditarConfigColuna;
    public static javax.swing.JMenu mnuNovoConfigColuna;
    private javax.swing.JMenuItem mnuSair;
    private javax.swing.JTabbedPane pnlConfigColuna;
    private javax.swing.JPanel pnlConfiguraConfigColuna;
    private javax.swing.JPanel pnlDadosConfigColuna;
    private javax.swing.JTable tblConfigColuna;
    private javax.swing.JTextField txtDescricaoConfigColuna;
    private javax.swing.JTextField txtPesquisarConfigColuna;
    private javax.swing.JTextField txtValorConfigColuna;
    // End of variables declaration//GEN-END:variables

    public final void readColunaConfig() {
        DefaultTableModel model = (DefaultTableModel) tblConfigColuna.getModel();
        ColunaConfigDAO setorDao = new ColunaConfigDAO();
        model.setNumRows(0);
        for (ColunaConfig config : setorDao.readColunaConfig()) {
            model.addRow(new Object[]{
                config.getColuna_config_id(),
                config.getTipo_coluna_config(),
                config.getColuna_config(),
                config.getDescricao_coluna_config()
            });
        }
    }
    
    public final void readTipo() {
        cmbTipoConfigColuna.removeAllItems();
        cmbTipoConfigColuna.addItem("");
        cmbTipoConfigColuna.addItem("Fabricante");
        cmbTipoConfigColuna.addItem("Marca");
        cmbTipoConfigColuna.addItem("Tipo Coluna");
        cmbTipoConfigColuna.addItem("Tamanho");
        cmbTipoConfigColuna.addItem("Diametro");
        cmbTipoConfigColuna.addItem("Particula");
        cmbTipoConfigColuna.addItem("Fase");
    }
    
    private void limparCampos() {
        txtValorConfigColuna.setText(null);
        txtValorConfigColuna.setText(null);
        txtDescricaoConfigColuna.setText(null);
        cmbTipoConfigColuna.setSelectedItem("");
    }
    
    private void criarColunaConfig() {
        ColunaConfig config = new ColunaConfig();
        ColunaConfigDAO configDAO = new ColunaConfigDAO();
        try {
            config.setTipo_coluna_config(cmbTipoConfigColuna.getSelectedItem().toString());
            config.setColuna_config(txtValorConfigColuna.getText());
            config.setDescricao_coluna_config(txtDescricaoConfigColuna.getText());
            configDAO.createColunaConfig(config);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Erro ao gravar dados: " + e);
        } finally {
            fecharDados();
        }
    }
    
    private void fecharDados() {
        pnlConfigColuna.setEnabledAt(0, true);
        pnlConfigColuna.setEnabledAt(1, false);
        pnlConfigColuna.setSelectedIndex(0);
        txtPesquisarConfigColuna.setText(null);
        tblConfigColuna.setRowSorter(null);
        mnuNovoConfigColuna.setEnabled(true);
        limparCampos();
        readColunaConfig();
    }
    
    private void abrirDados() {
        pnlConfigColuna.setEnabledAt(0, false);
        pnlConfigColuna.setEnabledAt(1, true);
        pnlConfigColuna.setSelectedIndex(1);
        mnuNovoConfigColuna.setEnabled(false);
        btnExcluirConfigColuna.setVisible(false);
        limparCampos();
        novoColunaConfig = true;
    }
    
    private void carregarDados(int id) {
        ColunaConfig config = new ColunaConfig();
        config.setColuna_config_id(id);
        ColunaConfigDAO configDao = new ColunaConfigDAO();
        configDao.selectColunaConfig(config);
        String[] tipo = {config.getTipo_coluna_config()};
        cmbTipoConfigColuna.setSelectedItem(tipo[0]);
        txtValorConfigColuna.setText(config.getColuna_config());
        txtDescricaoConfigColuna.setText(config.getDescricao_coluna_config());
        pnlConfigColuna.setEnabledAt(0, false);
        pnlConfigColuna.setEnabledAt(1, true);
        pnlConfigColuna.setSelectedIndex(1);
        btnExcluirConfigColuna.setVisible(true);
        mnuEditarConfigColuna.setEnabled(false);
        
    }
    
    private void atulizarColunaConfig() {
        ColunaConfig config = new ColunaConfig();
        ColunaConfigDAO configDAO = new ColunaConfigDAO();
        try {
            config.setColuna_config_id((Integer) tblConfigColuna.getValueAt(tblConfigColuna.getSelectedRow(), 0));
            config.setTipo_coluna_config(cmbTipoConfigColuna.getSelectedItem().toString());
            config.setColuna_config(txtValorConfigColuna.getText());
            config.setDescricao_coluna_config(txtDescricaoConfigColuna.getText());
            configDAO.updateColunaConfig(config);
        } catch (NumberFormatException | HeadlessException e) {
            JOptionPane.showMessageDialog(null, "Erro ao atualizar dados: " + e);
        } finally {
            fecharDados();
        }
    }
    
    private void deletarDados(int id) {
        ColunaConfig config = new ColunaConfig();
        ColunaConfigDAO configDAO = new ColunaConfigDAO();
        try {
            int dialogResult = JOptionPane.showConfirmDialog(null,
                    "Realmente Deseja Excluir Esse Valor?", "Aviso", JOptionPane.YES_NO_OPTION);
            if (dialogResult == 0) {
                config.setColuna_config_id(id);
                configDAO.deleteColunaConfig(config);
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Erro ao atulalizar dados: " + e);
        } finally {
            fecharDados();
        }
    }


}
