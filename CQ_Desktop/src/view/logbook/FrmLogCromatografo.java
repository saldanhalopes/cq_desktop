package view.logbook;

import DAO.ColunaDAO;
import DAO.CromatografoDAO;
import DAO.FaseMovelDAO;
import DAO.LoteDAO;
import DAO.MetodologiaDAO;
import DAO.SetorDAO;
import DAO.SystemSuitabilityDAO;
import DAO.TrocaTurnoDAO;
import model.Coluna;
import model.Cromatografo;
import model.FaseMovel;
import model.Lote;
import model.Setor;
import model.SystemSuitability;
import model.TrocaTurno;
import model.Usuario;
import util.DataHora;
import util.GridlineCellRenderer;
import java.awt.Desktop;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.io.IOException;
import java.net.URI;
import java.net.URISyntaxException;
import java.util.ArrayList;
import java.util.Date;
import java.util.Map;
import java.util.TreeMap;
import javax.swing.DefaultCellEditor;
import javax.swing.DefaultListModel;
import javax.swing.JComboBox;
import javax.swing.JOptionPane;
import javax.swing.RowFilter;
import javax.swing.Timer;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableColumn;
import javax.swing.table.TableRowSorter;

/**
 *
 * @author rafael.lopes
 */
public final class FrmLogCromatografo extends javax.swing.JInternalFrame {

    private Timer timer;
    private int currentSegundo = 0;
    private int currentMinuto = 0;
    private int currentHora = 0;
    private int velocidade = 1000;

    public static String getValueforKey(Integer value, TreeMap<Integer, String> category) {
        for (Map.Entry<Integer, String> entry : category.entrySet()) {
            if (entry.getKey().equals(value)) {
                return entry.getValue();
            }
        }
        return "";
    }
    private final TreeMap<Integer, String> categoryMapSetor = new TreeMap<>();
    private TreeMap<Integer, String> categoryMapMetodo = new TreeMap<>();
    final String zeros = "0000";

    /**
     * Creates new form FrmLogBook
     *
     * @param system_name
     */
    public FrmLogCromatografo(final String system_name) {
        initComponents();
        lblEquipamentoLogbook.setText(system_name);
        lblFaseMovelId.setVisible(false);
        lblColunaId.setVisible(false);
        readLog();
        carregarFaseMovel(system_name);
        readHistoricoFaseMovel(system_name);
        carregarColuna(system_name);
        readHistoricoColuna(system_name);
        carregarCampanha(system_name);
        readHistoricoSystem(system_name);
        readTrocaTurno();
        readCadastroProduto();
        readSistema();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        txtCampanha = new javax.swing.JTextField();
        jScrollPane4 = new javax.swing.JScrollPane();
        lstMetodos = new javax.swing.JList();
        jLabel6 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        txtObs = new javax.swing.JTextField();
        pnlDados = new javax.swing.JTabbedPane();
        pnlRegistros = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblRegistros = new javax.swing.JTable();
        btnNovoRegistro = new javax.swing.JButton();
        btnAtualizar = new javax.swing.JButton();
        pnlFaseMovel = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jLabel16 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();
        txtCanalA = new javax.swing.JTextField();
        txtQtCanalA = new javax.swing.JTextField();
        txtQtCanalB = new javax.swing.JTextField();
        txtQtCanalC = new javax.swing.JTextField();
        txtCanalC = new javax.swing.JTextField();
        txtQtCanalD = new javax.swing.JTextField();
        txtCanalD = new javax.swing.JTextField();
        jLabel21 = new javax.swing.JLabel();
        txtCanalB = new javax.swing.JTextField();
        txtLoteCanalA = new javax.swing.JTextField();
        txtValidadeCanalA = new javax.swing.JTextField();
        txtLoteCanalB = new javax.swing.JTextField();
        txtLoteCanalC = new javax.swing.JTextField();
        txtLoteCanalD = new javax.swing.JTextField();
        txtValidadeCanalB = new javax.swing.JTextField();
        txtValidadeCanalC = new javax.swing.JTextField();
        txtValidadeCanalD = new javax.swing.JTextField();
        jLabel22 = new javax.swing.JLabel();
        jLabel23 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblHistoricoFaseMovel = new javax.swing.JTable();
        lblFaseMovelId = new javax.swing.JLabel();
        pnlColuna = new javax.swing.JPanel();
        jPanel5 = new javax.swing.JPanel();
        jLabel24 = new javax.swing.JLabel();
        jLabel25 = new javax.swing.JLabel();
        jLabel26 = new javax.swing.JLabel();
        jLabel27 = new javax.swing.JLabel();
        jLabel28 = new javax.swing.JLabel();
        txtCodigoColuna = new javax.swing.JTextField();
        txtFabricanteColuna = new javax.swing.JTextField();
        txtAtivacaoColuna = new javax.swing.JTextField();
        txtAnaliseColuna = new javax.swing.JTextField();
        txtMetodoColuna = new javax.swing.JTextField();
        txtSetorColuna = new javax.swing.JTextField();
        txtParticulaColuna = new javax.swing.JTextField();
        txtMarcaColuna = new javax.swing.JTextField();
        txtDiametroColuna = new javax.swing.JTextField();
        txtVagaColuna = new javax.swing.JTextField();
        txtTamanhoColuna = new javax.swing.JTextField();
        jLabel30 = new javax.swing.JLabel();
        jLabel31 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        tblHistoricoColuna = new javax.swing.JTable();
        jLabel32 = new javax.swing.JLabel();
        jLabel33 = new javax.swing.JLabel();
        jLabel34 = new javax.swing.JLabel();
        jLabel35 = new javax.swing.JLabel();
        jLabel36 = new javax.swing.JLabel();
        txtObsColuna = new javax.swing.JTextField();
        lblColunaId = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        rbtSentidoDireto = new javax.swing.JRadioButton();
        rbtSentidoInverso = new javax.swing.JRadioButton();
        jSeparator1 = new javax.swing.JSeparator();
        jLabel5 = new javax.swing.JLabel();
        rbtFiltroSim = new javax.swing.JRadioButton();
        rbtFiltroNao = new javax.swing.JRadioButton();
        jSeparator2 = new javax.swing.JSeparator();
        jLabel7 = new javax.swing.JLabel();
        rbtPreColunaSim = new javax.swing.JRadioButton();
        rbtPreColunaNao = new javax.swing.JRadioButton();
        pnlSystem = new javax.swing.JPanel();
        jPanel7 = new javax.swing.JPanel();
        jScrollPane6 = new javax.swing.JScrollPane();
        tblHistoricoSystem = new javax.swing.JTable();
        pnlConfiguraConfigColuna = new javax.swing.JPanel();
        jPanel6 = new javax.swing.JPanel();
        jScrollPane5 = new javax.swing.JScrollPane();
        tblTrocaTurno = new javax.swing.JTable();
        txtPesquisarTrocaTurno = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        btnAtualizarTrocaTurno = new javax.swing.JButton();
        btnNovoTurno = new javax.swing.JButton();
        pnlLote = new javax.swing.JPanel();
        jPanel11 = new javax.swing.JPanel();
        jScrollPane8 = new javax.swing.JScrollPane();
        tblLotes = new javax.swing.JTable();
        btnNovoLote = new javax.swing.JButton();
        btnAtualizar1 = new javax.swing.JButton();
        jPanel8 = new javax.swing.JPanel();
        jButton5 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        txtHora = new javax.swing.JSpinner();
        txtMinuto = new javax.swing.JSpinner();
        txtSegundo = new javax.swing.JSpinner();
        label1 = new javax.swing.JLabel();
        label = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        ckbColuna = new javax.swing.JCheckBox();
        ckbFaseMovel = new javax.swing.JCheckBox();
        ckbSystem = new javax.swing.JCheckBox();
        lblEquipamentoLogbook = new javax.swing.JLabel();
        lblIconeEquipamento = new javax.swing.JLabel();
        jSeparator3 = new javax.swing.JSeparator();

        getContentPane().setLayout(new java.awt.GridLayout(1, 0));

        jPanel1.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Campanha"));

        jLabel1.setText("Nome:");

        txtCampanha.setEditable(false);
        txtCampanha.setBackground(new java.awt.Color(255, 255, 255));

        lstMetodos.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        lstMetodos.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        lstMetodos.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lstMetodosMouseClicked(evt);
            }
        });
        jScrollPane4.setViewportView(lstMetodos);

        jLabel6.setText("MÃ©todos:");

        jLabel2.setText("Obs:");

        txtObs.setEditable(false);
        txtObs.setBackground(new java.awt.Color(255, 255, 255));

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtCampanha)
                    .addComponent(jScrollPane4)
                    .addComponent(txtObs))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtCampanha, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtObs, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel6)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addContainerGap())
        );

        tblRegistros.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "cor", "Id", "InÃ­cio", "Fim", "DescriÃ§Ã£o", "Data Registro", "UsuÃ¡rio"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tblRegistros);
        if (tblRegistros.getColumnModel().getColumnCount() > 0) {
            tblRegistros.getColumnModel().getColumn(0).setMinWidth(0);
            tblRegistros.getColumnModel().getColumn(0).setPreferredWidth(0);
            tblRegistros.getColumnModel().getColumn(0).setMaxWidth(0);
            tblRegistros.getColumnModel().getColumn(1).setMinWidth(0);
            tblRegistros.getColumnModel().getColumn(1).setPreferredWidth(0);
            tblRegistros.getColumnModel().getColumn(1).setMaxWidth(0);
            tblRegistros.getColumnModel().getColumn(2).setMinWidth(150);
            tblRegistros.getColumnModel().getColumn(2).setPreferredWidth(150);
            tblRegistros.getColumnModel().getColumn(2).setMaxWidth(150);
            tblRegistros.getColumnModel().getColumn(3).setMinWidth(150);
            tblRegistros.getColumnModel().getColumn(3).setPreferredWidth(150);
            tblRegistros.getColumnModel().getColumn(3).setMaxWidth(150);
            tblRegistros.getColumnModel().getColumn(5).setMinWidth(150);
            tblRegistros.getColumnModel().getColumn(5).setPreferredWidth(150);
            tblRegistros.getColumnModel().getColumn(5).setMaxWidth(150);
            tblRegistros.getColumnModel().getColumn(6).setMinWidth(100);
            tblRegistros.getColumnModel().getColumn(6).setPreferredWidth(100);
            tblRegistros.getColumnModel().getColumn(6).setMaxWidth(100);
        }

        btnNovoRegistro.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/plus.png"))); // NOI18N
        btnNovoRegistro.setText("Novo");
        btnNovoRegistro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNovoRegistroActionPerformed(evt);
            }
        });

        btnAtualizar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/icon_raio.png"))); // NOI18N
        btnAtualizar.setText("Atualizar");
        btnAtualizar.setToolTipText("Atualizar");
        btnAtualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAtualizarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlRegistrosLayout = new javax.swing.GroupLayout(pnlRegistros);
        pnlRegistros.setLayout(pnlRegistrosLayout);
        pnlRegistrosLayout.setHorizontalGroup(
            pnlRegistrosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlRegistrosLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnNovoRegistro, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 712, Short.MAX_VALUE)
                .addComponent(btnAtualizar)
                .addContainerGap())
            .addGroup(pnlRegistrosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(pnlRegistrosLayout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 919, Short.MAX_VALUE)
                    .addContainerGap()))
        );
        pnlRegistrosLayout.setVerticalGroup(
            pnlRegistrosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlRegistrosLayout.createSequentialGroup()
                .addContainerGap(283, Short.MAX_VALUE)
                .addGroup(pnlRegistrosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(btnAtualizar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnNovoRegistro, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
            .addGroup(pnlRegistrosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(pnlRegistrosLayout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 255, Short.MAX_VALUE)
                    .addGap(61, 61, 61)))
        );

        pnlDados.addTab("Registros", pnlRegistros);

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder("Fase MÃ³vel"));

        jLabel16.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel16.setText("Fase MÃ³vel");

        jLabel17.setText("Canal A:");

        jLabel18.setText("Canal C:");

        jLabel19.setText("Canal D:");

        jLabel20.setText("Canal B:");

        txtCanalA.setEditable(false);
        txtCanalA.setBackground(new java.awt.Color(204, 204, 204));

        txtQtCanalA.setEditable(false);
        txtQtCanalA.setBackground(new java.awt.Color(204, 204, 204));

        txtQtCanalB.setEditable(false);
        txtQtCanalB.setBackground(new java.awt.Color(204, 204, 204));

        txtQtCanalC.setEditable(false);
        txtQtCanalC.setBackground(new java.awt.Color(204, 204, 204));

        txtCanalC.setEditable(false);
        txtCanalC.setBackground(new java.awt.Color(204, 204, 204));

        txtQtCanalD.setEditable(false);
        txtQtCanalD.setBackground(new java.awt.Color(204, 204, 204));

        txtCanalD.setEditable(false);
        txtCanalD.setBackground(new java.awt.Color(204, 204, 204));

        jLabel21.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel21.setText("%");

        txtCanalB.setEditable(false);
        txtCanalB.setBackground(new java.awt.Color(204, 204, 204));

        txtLoteCanalA.setEditable(false);
        txtLoteCanalA.setBackground(new java.awt.Color(204, 204, 204));

        txtValidadeCanalA.setEditable(false);
        txtValidadeCanalA.setBackground(new java.awt.Color(204, 204, 204));

        txtLoteCanalB.setEditable(false);
        txtLoteCanalB.setBackground(new java.awt.Color(204, 204, 204));

        txtLoteCanalC.setEditable(false);
        txtLoteCanalC.setBackground(new java.awt.Color(204, 204, 204));

        txtLoteCanalD.setEditable(false);
        txtLoteCanalD.setBackground(new java.awt.Color(204, 204, 204));

        txtValidadeCanalB.setEditable(false);
        txtValidadeCanalB.setBackground(new java.awt.Color(204, 204, 204));

        txtValidadeCanalC.setEditable(false);
        txtValidadeCanalC.setBackground(new java.awt.Color(204, 204, 204));

        txtValidadeCanalD.setEditable(false);
        txtValidadeCanalD.setBackground(new java.awt.Color(204, 204, 204));

        jLabel22.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel22.setText("Lote");

        jLabel23.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel23.setText("Validade");

        tblHistoricoFaseMovel.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "HistÃ³rico", "UsuÃ¡rio", "Data / Hora"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblHistoricoFaseMovel.getTableHeader().setReorderingAllowed(false);
        jScrollPane2.setViewportView(tblHistoricoFaseMovel);
        if (tblHistoricoFaseMovel.getColumnModel().getColumnCount() > 0) {
            tblHistoricoFaseMovel.getColumnModel().getColumn(0).setPreferredWidth(600);
            tblHistoricoFaseMovel.getColumnModel().getColumn(1).setPreferredWidth(120);
            tblHistoricoFaseMovel.getColumnModel().getColumn(2).setPreferredWidth(150);
        }

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel16, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(lblFaseMovelId, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel17, javax.swing.GroupLayout.DEFAULT_SIZE, 50, Short.MAX_VALUE)
                                    .addComponent(jLabel20, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtCanalA))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel3Layout.createSequentialGroup()
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel18, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel19, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtCanalB)
                                    .addComponent(txtCanalC)
                                    .addComponent(txtCanalD, javax.swing.GroupLayout.Alignment.TRAILING))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtLoteCanalA, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(txtLoteCanalB, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(txtLoteCanalC, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(txtLoteCanalD, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel22, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 250, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtValidadeCanalA, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtValidadeCanalB, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtValidadeCanalC, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtValidadeCanalD, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel23, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtQtCanalA)
                            .addComponent(txtQtCanalB)
                            .addComponent(txtQtCanalC)
                            .addComponent(txtQtCanalD)
                            .addComponent(jLabel21, javax.swing.GroupLayout.DEFAULT_SIZE, 56, Short.MAX_VALUE)))
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 887, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel16)
                            .addComponent(lblFaseMovelId))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel17)
                            .addComponent(txtCanalA, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtCanalB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel20))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtCanalC, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel18))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel19)
                            .addComponent(txtCanalD, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel21)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtQtCanalA, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtQtCanalB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtQtCanalC, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtQtCanalD, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel23)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtValidadeCanalA, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtValidadeCanalB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtValidadeCanalC, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtValidadeCanalD, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel22)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtLoteCanalA, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtLoteCanalB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtLoteCanalC, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtLoteCanalD, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 155, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout pnlFaseMovelLayout = new javax.swing.GroupLayout(pnlFaseMovel);
        pnlFaseMovel.setLayout(pnlFaseMovelLayout);
        pnlFaseMovelLayout.setHorizontalGroup(
            pnlFaseMovelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlFaseMovelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        pnlFaseMovelLayout.setVerticalGroup(
            pnlFaseMovelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlFaseMovelLayout.createSequentialGroup()
                .addGap(9, 9, 9)
                .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pnlDados.addTab("Fase MÃ³vel", pnlFaseMovel);

        jPanel5.setBorder(javax.swing.BorderFactory.createTitledBorder("Coluna"));

        jLabel24.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel24.setText("MÃ©todo:");

        jLabel25.setText("CÃ³digo:");

        jLabel26.setText("Fabricante:");

        jLabel27.setText("Setor:");

        jLabel28.setText("Tamanho:");

        txtCodigoColuna.setEditable(false);
        txtCodigoColuna.setBackground(new java.awt.Color(204, 204, 204));

        txtFabricanteColuna.setEditable(false);
        txtFabricanteColuna.setBackground(new java.awt.Color(204, 204, 204));

        txtAtivacaoColuna.setEditable(false);
        txtAtivacaoColuna.setBackground(new java.awt.Color(204, 204, 204));

        txtAnaliseColuna.setEditable(false);
        txtAnaliseColuna.setBackground(new java.awt.Color(204, 204, 204));

        txtMetodoColuna.setEditable(false);
        txtMetodoColuna.setBackground(new java.awt.Color(204, 204, 204));

        txtSetorColuna.setEditable(false);
        txtSetorColuna.setBackground(new java.awt.Color(204, 204, 204));

        txtParticulaColuna.setEditable(false);
        txtParticulaColuna.setBackground(new java.awt.Color(204, 204, 204));

        txtMarcaColuna.setEditable(false);
        txtMarcaColuna.setBackground(new java.awt.Color(204, 204, 204));

        txtDiametroColuna.setEditable(false);
        txtDiametroColuna.setBackground(new java.awt.Color(204, 204, 204));

        txtVagaColuna.setEditable(false);
        txtVagaColuna.setBackground(new java.awt.Color(204, 204, 204));

        txtTamanhoColuna.setEditable(false);
        txtTamanhoColuna.setBackground(new java.awt.Color(204, 204, 204));

        jLabel30.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel30.setText("AnÃ¡lise:");

        jLabel31.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel31.setText("Marca:");

        tblHistoricoColuna.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "HistÃ³rico", "UsuÃ¡rio", "Data / Hora"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblHistoricoColuna.getTableHeader().setReorderingAllowed(false);
        jScrollPane3.setViewportView(tblHistoricoColuna);
        if (tblHistoricoColuna.getColumnModel().getColumnCount() > 0) {
            tblHistoricoColuna.getColumnModel().getColumn(0).setPreferredWidth(600);
            tblHistoricoColuna.getColumnModel().getColumn(1).setPreferredWidth(120);
            tblHistoricoColuna.getColumnModel().getColumn(2).setPreferredWidth(150);
        }

        jLabel32.setText("PartÃ­cula:");

        jLabel33.setText("DiÃ¢metro:");

        jLabel34.setText("Vaga:");

        jLabel35.setText("AtivaÃ§Ã£o:");

        jLabel36.setText("Obs:");

        txtObsColuna.setEditable(false);
        txtObsColuna.setBackground(new java.awt.Color(204, 204, 204));

        jLabel3.setText("Sentido:");

        rbtSentidoDireto.setText("Direto");
        rbtSentidoDireto.setEnabled(false);

        rbtSentidoInverso.setText("Inverso");
        rbtSentidoInverso.setEnabled(false);

        jSeparator1.setOrientation(javax.swing.SwingConstants.VERTICAL);

        jLabel5.setText("PrÃ©-Filtro:");

        rbtFiltroSim.setText("Sim");
        rbtFiltroSim.setEnabled(false);

        rbtFiltroNao.setText("NÃ£o");
        rbtFiltroNao.setEnabled(false);

        jSeparator2.setOrientation(javax.swing.SwingConstants.VERTICAL);

        jLabel7.setText("PrÃ©-Coluna:");

        rbtPreColunaSim.setText("Sim");
        rbtPreColunaSim.setEnabled(false);

        rbtPreColunaNao.setText("NÃ£o");
        rbtPreColunaNao.setEnabled(false);

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane3))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel26)
                                .addComponent(jLabel27, javax.swing.GroupLayout.Alignment.TRAILING))
                            .addComponent(jLabel36))
                        .addGap(4, 4, 4)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtSetorColuna, javax.swing.GroupLayout.DEFAULT_SIZE, 314, Short.MAX_VALUE)
                            .addGroup(jPanel5Layout.createSequentialGroup()
                                .addComponent(txtFabricanteColuna)
                                .addGap(2, 2, 2))
                            .addComponent(txtObsColuna))
                        .addGap(4, 4, 4)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel5Layout.createSequentialGroup()
                                .addComponent(jLabel31)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtMarcaColuna, javax.swing.GroupLayout.PREFERRED_SIZE, 283, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(4, 4, 4)
                                .addComponent(jLabel34)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtVagaColuna, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                                .addComponent(jLabel28)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtTamanhoColuna, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel33)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtDiametroColuna, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel32)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtParticulaColuna, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel35)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtAtivacaoColuna, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel5Layout.createSequentialGroup()
                                .addComponent(jLabel3)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(rbtSentidoDireto)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(rbtSentidoInverso)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(27, 27, 27)
                                .addComponent(jLabel5)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(rbtFiltroSim)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(rbtFiltroNao)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(27, 27, 27)
                                .addComponent(jLabel7)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(rbtPreColunaSim)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(rbtPreColunaNao))))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGap(25, 25, 25)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel24)
                            .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(lblColunaId)
                                .addComponent(jLabel25)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel5Layout.createSequentialGroup()
                                .addComponent(txtCodigoColuna, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel30)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtAnaliseColuna))
                            .addComponent(txtMetodoColuna))))
                .addContainerGap())
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addComponent(lblColunaId)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel25)
                    .addComponent(txtCodigoColuna, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtAnaliseColuna, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel30))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtMetodoColuna, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel24))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel26)
                    .addComponent(txtFabricanteColuna, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel31)
                    .addComponent(txtMarcaColuna, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel34)
                    .addComponent(txtVagaColuna, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel27)
                    .addComponent(txtAtivacaoColuna, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtSetorColuna, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel35)
                    .addComponent(jLabel28)
                    .addComponent(txtTamanhoColuna, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel32)
                    .addComponent(txtParticulaColuna, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel33)
                    .addComponent(txtDiametroColuna, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel36)
                        .addComponent(txtObsColuna, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(rbtFiltroSim)
                            .addComponent(rbtFiltroNao)
                            .addComponent(jLabel7)
                            .addComponent(rbtPreColunaNao)
                            .addComponent(rbtPreColunaSim)))
                    .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(rbtSentidoDireto)
                        .addComponent(rbtSentidoInverso)
                        .addComponent(jLabel3)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 134, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout pnlColunaLayout = new javax.swing.GroupLayout(pnlColuna);
        pnlColuna.setLayout(pnlColunaLayout);
        pnlColunaLayout.setHorizontalGroup(
            pnlColunaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlColunaLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        pnlColunaLayout.setVerticalGroup(
            pnlColunaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlColunaLayout.createSequentialGroup()
                .addGap(9, 9, 9)
                .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pnlDados.addTab("Coluna", pnlColuna);

        jPanel7.setBorder(javax.swing.BorderFactory.createTitledBorder("AdequaÃ§Ãµes de Sistema"));

        tblHistoricoSystem.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "id", "HistÃ³rico", "UsuÃ¡rio", "Data / Hora", "Check", "Verificado Por"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Boolean.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblHistoricoSystem.getTableHeader().setReorderingAllowed(false);
        tblHistoricoSystem.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblHistoricoSystemMouseClicked(evt);
            }
        });
        jScrollPane6.setViewportView(tblHistoricoSystem);
        if (tblHistoricoSystem.getColumnModel().getColumnCount() > 0) {
            tblHistoricoSystem.getColumnModel().getColumn(0).setMinWidth(0);
            tblHistoricoSystem.getColumnModel().getColumn(0).setPreferredWidth(0);
            tblHistoricoSystem.getColumnModel().getColumn(0).setMaxWidth(0);
            tblHistoricoSystem.getColumnModel().getColumn(1).setPreferredWidth(600);
            tblHistoricoSystem.getColumnModel().getColumn(2).setPreferredWidth(150);
            tblHistoricoSystem.getColumnModel().getColumn(3).setPreferredWidth(180);
            tblHistoricoSystem.getColumnModel().getColumn(4).setPreferredWidth(80);
            tblHistoricoSystem.getColumnModel().getColumn(5).setPreferredWidth(150);
        }

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane6, javax.swing.GroupLayout.DEFAULT_SIZE, 887, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addGap(6, 6, 6)
                .addComponent(jScrollPane6, javax.swing.GroupLayout.DEFAULT_SIZE, 278, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout pnlSystemLayout = new javax.swing.GroupLayout(pnlSystem);
        pnlSystem.setLayout(pnlSystemLayout);
        pnlSystemLayout.setHorizontalGroup(
            pnlSystemLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlSystemLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        pnlSystemLayout.setVerticalGroup(
            pnlSystemLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlSystemLayout.createSequentialGroup()
                .addGap(9, 9, 9)
                .addComponent(jPanel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pnlDados.addTab("System Suitability", pnlSystem);

        jPanel6.setBorder(javax.swing.BorderFactory.createTitledBorder("Trocas de Turno"));

        tblTrocaTurno.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Id", "Turno", "Campanha", "DescriÃ§Ã£o", "Data", "UsuÃ¡rio"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblTrocaTurno.setSurrendersFocusOnKeystroke(true);
        tblTrocaTurno.getTableHeader().setReorderingAllowed(false);
        tblTrocaTurno.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblTrocaTurnoMouseClicked(evt);
            }
        });
        jScrollPane5.setViewportView(tblTrocaTurno);
        if (tblTrocaTurno.getColumnModel().getColumnCount() > 0) {
            tblTrocaTurno.getColumnModel().getColumn(0).setPreferredWidth(30);
            tblTrocaTurno.getColumnModel().getColumn(0).setMaxWidth(30);
            tblTrocaTurno.getColumnModel().getColumn(1).setPreferredWidth(100);
            tblTrocaTurno.getColumnModel().getColumn(1).setMaxWidth(100);
            tblTrocaTurno.getColumnModel().getColumn(4).setPreferredWidth(180);
            tblTrocaTurno.getColumnModel().getColumn(4).setMaxWidth(180);
            tblTrocaTurno.getColumnModel().getColumn(5).setPreferredWidth(120);
            tblTrocaTurno.getColumnModel().getColumn(5).setMaxWidth(120);
        }

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane5, javax.swing.GroupLayout.DEFAULT_SIZE, 907, Short.MAX_VALUE)
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane5, javax.swing.GroupLayout.DEFAULT_SIZE, 216, Short.MAX_VALUE)
        );

        txtPesquisarTrocaTurno.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtPesquisarTrocaTurnoKeyReleased(evt);
            }
        });

        jLabel4.setText("Pesquisar:");

        btnAtualizarTrocaTurno.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/icon_raio.png"))); // NOI18N
        btnAtualizarTrocaTurno.setText("Atualizar");
        btnAtualizarTrocaTurno.setToolTipText("Atualizar");
        btnAtualizarTrocaTurno.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAtualizarTrocaTurnoActionPerformed(evt);
            }
        });

        btnNovoTurno.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/plus.png"))); // NOI18N
        btnNovoTurno.setText("Novo");
        btnNovoTurno.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNovoTurnoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlConfiguraConfigColunaLayout = new javax.swing.GroupLayout(pnlConfiguraConfigColuna);
        pnlConfiguraConfigColuna.setLayout(pnlConfiguraConfigColunaLayout);
        pnlConfiguraConfigColunaLayout.setHorizontalGroup(
            pnlConfiguraConfigColunaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlConfiguraConfigColunaLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlConfiguraConfigColunaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlConfiguraConfigColunaLayout.createSequentialGroup()
                        .addGap(8, 8, 8)
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtPesquisarTrocaTurno))
                    .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(pnlConfiguraConfigColunaLayout.createSequentialGroup()
                        .addComponent(btnNovoTurno, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnAtualizarTrocaTurno, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        pnlConfiguraConfigColunaLayout.setVerticalGroup(
            pnlConfiguraConfigColunaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlConfiguraConfigColunaLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlConfiguraConfigColunaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtPesquisarTrocaTurno, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlConfiguraConfigColunaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnAtualizarTrocaTurno)
                    .addComponent(btnNovoTurno, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(12, 12, 12))
        );

        pnlDados.addTab("Passagem Turno", pnlConfiguraConfigColuna);

        jPanel11.setBorder(javax.swing.BorderFactory.createTitledBorder("Lotes"));

        tblLotes.setAutoCreateRowSorter(true);
        tblLotes.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Id", "Produto", "Lote", "Data Entrada", "Status"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblLotes.setSurrendersFocusOnKeystroke(true);
        tblLotes.getTableHeader().setReorderingAllowed(false);
        tblLotes.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblLotesMouseClicked(evt);
            }
        });
        jScrollPane8.setViewportView(tblLotes);
        if (tblLotes.getColumnModel().getColumnCount() > 0) {
            tblLotes.getColumnModel().getColumn(0).setMinWidth(30);
            tblLotes.getColumnModel().getColumn(0).setPreferredWidth(30);
            tblLotes.getColumnModel().getColumn(0).setMaxWidth(30);
            tblLotes.getColumnModel().getColumn(2).setMinWidth(100);
            tblLotes.getColumnModel().getColumn(2).setPreferredWidth(100);
            tblLotes.getColumnModel().getColumn(2).setMaxWidth(100);
            tblLotes.getColumnModel().getColumn(3).setMinWidth(120);
            tblLotes.getColumnModel().getColumn(3).setPreferredWidth(120);
            tblLotes.getColumnModel().getColumn(3).setMaxWidth(120);
            tblLotes.getColumnModel().getColumn(4).setMinWidth(200);
            tblLotes.getColumnModel().getColumn(4).setPreferredWidth(200);
            tblLotes.getColumnModel().getColumn(4).setMaxWidth(200);
        }

        javax.swing.GroupLayout jPanel11Layout = new javax.swing.GroupLayout(jPanel11);
        jPanel11.setLayout(jPanel11Layout);
        jPanel11Layout.setHorizontalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane8, javax.swing.GroupLayout.DEFAULT_SIZE, 907, Short.MAX_VALUE)
        );
        jPanel11Layout.setVerticalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane8, javax.swing.GroupLayout.DEFAULT_SIZE, 282, Short.MAX_VALUE)
        );

        btnNovoLote.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/plus.png"))); // NOI18N
        btnNovoLote.setText("Novo");
        btnNovoLote.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNovoLoteActionPerformed(evt);
            }
        });

        btnAtualizar1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/icon_raio.png"))); // NOI18N
        btnAtualizar1.setText("Atualizar");
        btnAtualizar1.setToolTipText("Atualizar");
        btnAtualizar1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAtualizar1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlLoteLayout = new javax.swing.GroupLayout(pnlLote);
        pnlLote.setLayout(pnlLoteLayout);
        pnlLoteLayout.setHorizontalGroup(
            pnlLoteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlLoteLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnNovoLote, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 712, Short.MAX_VALUE)
                .addComponent(btnAtualizar1)
                .addContainerGap())
            .addGroup(pnlLoteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(pnlLoteLayout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(jPanel11, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addContainerGap()))
        );
        pnlLoteLayout.setVerticalGroup(
            pnlLoteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlLoteLayout.createSequentialGroup()
                .addContainerGap(283, Short.MAX_VALUE)
                .addGroup(pnlLoteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(btnAtualizar1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnNovoLote, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
            .addGroup(pnlLoteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(pnlLoteLayout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(jPanel11, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );

        pnlDados.addTab("Lotes", pnlLote);

        jButton5.setText("Start");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        jButton2.setText("Pause");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton1.setText("Play");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton3.setText("Stop");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton4.setText("Fechar");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        label1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        label1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        label1.setText("Tempo:");

        label.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        label.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        label.setText("00:00:00");

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addGap(55, 55, 55)
                .addComponent(label1, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(label, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(700, Short.MAX_VALUE))
            .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel8Layout.createSequentialGroup()
                    .addContainerGap()
                    .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel8Layout.createSequentialGroup()
                            .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(jButton5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(jPanel8Layout.createSequentialGroup()
                                    .addComponent(jButton2)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(jButton1)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(jButton3)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(jButton4)))
                            .addGap(0, 0, Short.MAX_VALUE))
                        .addGroup(jPanel8Layout.createSequentialGroup()
                            .addComponent(txtHora)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(txtMinuto)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(txtSegundo)))
                    .addContainerGap()))
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addGap(96, 96, 96)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(label)
                    .addComponent(label1))
                .addContainerGap(209, Short.MAX_VALUE))
            .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel8Layout.createSequentialGroup()
                    .addGap(141, 141, 141)
                    .addComponent(jButton5)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jButton1)
                        .addComponent(jButton2)
                        .addComponent(jButton3)
                        .addComponent(jButton4))
                    .addGap(12, 12, 12)
                    .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(txtHora, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(txtMinuto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(txtSegundo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addContainerGap(102, Short.MAX_VALUE)))
        );

        pnlDados.addTab("tab7", jPanel8);

        jPanel4.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        ckbColuna.setText("Coluna");

        ckbFaseMovel.setText("Fase MÃ³vel");

        ckbSystem.setText("System Suitability");

        lblEquipamentoLogbook.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        lblEquipamentoLogbook.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblEquipamentoLogbook.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        lblIconeEquipamento.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/computer.png"))); // NOI18N
        lblIconeEquipamento.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        lblIconeEquipamento.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblIconeEquipamentoMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(ckbColuna, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(ckbFaseMovel, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(ckbSystem, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(0, 0, Short.MAX_VALUE))
            .addComponent(lblEquipamentoLogbook, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(lblIconeEquipamento))
            .addComponent(jSeparator3, javax.swing.GroupLayout.Alignment.TRAILING)
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addComponent(lblIconeEquipamento, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(lblEquipamentoLogbook)
                .addGap(5, 5, 5)
                .addComponent(jSeparator3, javax.swing.GroupLayout.PREFERRED_SIZE, 6, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(ckbColuna)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(ckbFaseMovel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(ckbSystem)
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(pnlDados)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(pnlDados)
                .addContainerGap())
        );

        getContentPane().add(jPanel1);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void lblIconeEquipamentoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblIconeEquipamentoMouseClicked
        if (evt.getClickCount() == 2) {
            FrmConfigCromatografo frm = new FrmConfigCromatografo(null, true, lblEquipamentoLogbook.getText());
            frm.setVisible(true);
        }
    }//GEN-LAST:event_lblIconeEquipamentoMouseClicked

    private void btnAtualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAtualizarActionPerformed
        String sys_name = lblEquipamentoLogbook.getText();
        carregarFaseMovel(sys_name);
        readHistoricoFaseMovel(sys_name);
        carregarColuna(sys_name);
        readHistoricoColuna(sys_name);
        carregarCampanha(sys_name);
        readHistoricoSystem(sys_name);
        readLog();
        readSistema();
        pnlDados.setSelectedIndex(0);
    }//GEN-LAST:event_btnAtualizarActionPerformed

    private void btnNovoRegistroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNovoRegistroActionPerformed
        String sys_name = lblEquipamentoLogbook.getText();
        FrmNovoRegistro frm = new FrmNovoRegistro(null, true, this, sys_name);
        frm.setVisible(true);
        carregarFaseMovel(sys_name);
        readHistoricoFaseMovel(sys_name);
        carregarColuna(sys_name);
        readHistoricoColuna(sys_name);
        carregarCampanha(sys_name);
        readHistoricoSystem(sys_name);
        readLog();
        readSistema();
        pnlDados.setSelectedIndex(0);
    }//GEN-LAST:event_btnNovoRegistroActionPerformed

    private void tblTrocaTurnoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblTrocaTurnoMouseClicked
        if (evt.getClickCount() == 2) {
            FrmTrocaTurno frm = new FrmTrocaTurno(null, true,
                    (Integer) tblTrocaTurno.getValueAt(tblTrocaTurno.getSelectedRow(), 0));
            frm.setVisible(true);
            readTrocaTurno();
        }
    }//GEN-LAST:event_tblTrocaTurnoMouseClicked

    private void txtPesquisarTrocaTurnoKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtPesquisarTrocaTurnoKeyReleased
        TableRowSorter sorter = null;
        DefaultTableModel model = (DefaultTableModel) tblTrocaTurno.getModel();
        sorter = new TableRowSorter<>(model);
        tblTrocaTurno.setRowSorter(sorter);
        String text = txtPesquisarTrocaTurno.getText().trim().toUpperCase();
        String parametro = "*";
        if (text.length() == 0) {
            sorter.setRowFilter(null);
        } else if (text.indexOf(parametro) > 0) {
            ArrayList<RowFilter<Object, Object>> andFilters = new ArrayList<>();
            andFilters.add(RowFilter.regexFilter("(?i)" + text.substring(0, text.indexOf(parametro)).trim().toUpperCase()));
            andFilters.add(RowFilter.regexFilter("(?i)" + text.substring(text.indexOf(parametro) + 1, text.length()).trim().toUpperCase()));
            sorter.setRowFilter(RowFilter.andFilter(andFilters));
        } else {
            sorter.setRowFilter(RowFilter.regexFilter("(?i)" + text.toUpperCase()));
        }
    }//GEN-LAST:event_txtPesquisarTrocaTurnoKeyReleased

    private void btnAtualizarTrocaTurnoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAtualizarTrocaTurnoActionPerformed
        readTrocaTurno();
    }//GEN-LAST:event_btnAtualizarTrocaTurnoActionPerformed

    private void tblHistoricoSystemMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblHistoricoSystemMouseClicked
        if (evt.getClickCount() == 2) {
            if (!(Boolean) tblHistoricoSystem.getValueAt(tblHistoricoSystem.getSelectedRow(), 4)) {
                int dialogResult = JOptionPane.showConfirmDialog(null,
                        "Deseja validar esse System Suitability?", "Aviso", JOptionPane.YES_NO_OPTION);
                if (dialogResult == 0) {
                    updateSystemSuitability();
                    readHistoricoSystem(lblEquipamentoLogbook.getText());
                    readSistema();
                }
            }
        }
    }//GEN-LAST:event_tblHistoricoSystemMouseClicked

    private void lstMetodosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lstMetodosMouseClicked
        if (evt.getClickCount() == 2) {
            try {
                if (getValueforKey(lstMetodos.getSelectedIndex(), categoryMapMetodo) != null) {
                    if (!getValueforKey(lstMetodos.getSelectedIndex(), categoryMapMetodo).isEmpty()) {
                        Desktop d = Desktop.getDesktop();
                        d.browse(new URI(getValueforKey(lstMetodos.getSelectedIndex(), categoryMapMetodo)));
                    } else {
                        JOptionPane.showMessageDialog(null, "Esse mÃ©todo nÃ£o possui manual de ajuda");
                    }
                } else {
                    JOptionPane.showMessageDialog(null, "Esse mÃ©todo nÃ£o possui manual de ajuda");
                }
            } catch (IOException | URISyntaxException | NullPointerException e) {
                JOptionPane.showMessageDialog(null, "Esse mÃ©todo nÃ£o possui manual de ajuda");
            }
        }
    }//GEN-LAST:event_lstMetodosMouseClicked

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        timer.stop();
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        stopTime();
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        System.exit(0);
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        timer.restart();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        currentHora = (int) txtHora.getValue();
        currentMinuto = (int) txtMinuto.getValue();
        currentSegundo = (int) txtSegundo.getValue();
        iniciarContagem();
    }//GEN-LAST:event_jButton5ActionPerformed

    private void tblLotesMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblLotesMouseClicked
        if (evt.getClickCount() == 2) {
            FrmLoteCromatografo frm = new FrmLoteCromatografo(null, true,
                    (Integer) tblLotes.getValueAt(tblLotes.getSelectedRow(), 0));
            frm.setVisible(true);
        }
    }//GEN-LAST:event_tblLotesMouseClicked

    private void btnNovoLoteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNovoLoteActionPerformed
        FrmLoteCromatografo frm = new FrmLoteCromatografo(null, true);
        frm.setVisible(true);
    }//GEN-LAST:event_btnNovoLoteActionPerformed

    private void btnAtualizar1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAtualizar1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnAtualizar1ActionPerformed

    private void btnNovoTurnoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNovoTurnoActionPerformed
        FrmTrocaTurno frm = new FrmTrocaTurno(null, true,
                lblEquipamentoLogbook.getText(), txtCampanha.getText());
        frm.setVisible(true);
        readTrocaTurno();
    }//GEN-LAST:event_btnNovoTurnoActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    public static javax.swing.JButton btnAtualizar;
    public static javax.swing.JButton btnAtualizar1;
    public static javax.swing.JButton btnAtualizarTrocaTurno;
    public static javax.swing.JButton btnNovoLote;
    public static javax.swing.JButton btnNovoRegistro;
    public static javax.swing.JButton btnNovoTurno;
    public static javax.swing.JCheckBox ckbColuna;
    public static javax.swing.JCheckBox ckbFaseMovel;
    public static javax.swing.JCheckBox ckbSystem;
    public static javax.swing.JButton jButton1;
    public static javax.swing.JButton jButton2;
    public static javax.swing.JButton jButton3;
    public static javax.swing.JButton jButton4;
    public static javax.swing.JButton jButton5;
    public static javax.swing.JLabel jLabel1;
    public static javax.swing.JLabel jLabel16;
    public static javax.swing.JLabel jLabel17;
    public static javax.swing.JLabel jLabel18;
    public static javax.swing.JLabel jLabel19;
    public static javax.swing.JLabel jLabel2;
    public static javax.swing.JLabel jLabel20;
    public static javax.swing.JLabel jLabel21;
    public static javax.swing.JLabel jLabel22;
    public static javax.swing.JLabel jLabel23;
    public static javax.swing.JLabel jLabel24;
    public static javax.swing.JLabel jLabel25;
    public static javax.swing.JLabel jLabel26;
    public static javax.swing.JLabel jLabel27;
    public static javax.swing.JLabel jLabel28;
    public static javax.swing.JLabel jLabel3;
    public static javax.swing.JLabel jLabel30;
    public static javax.swing.JLabel jLabel31;
    public static javax.swing.JLabel jLabel32;
    public static javax.swing.JLabel jLabel33;
    public static javax.swing.JLabel jLabel34;
    public static javax.swing.JLabel jLabel35;
    public static javax.swing.JLabel jLabel36;
    public static javax.swing.JLabel jLabel4;
    public static javax.swing.JLabel jLabel5;
    public static javax.swing.JLabel jLabel6;
    public static javax.swing.JLabel jLabel7;
    public static javax.swing.JPanel jPanel1;
    public static javax.swing.JPanel jPanel11;
    public static javax.swing.JPanel jPanel2;
    public static javax.swing.JPanel jPanel3;
    public static javax.swing.JPanel jPanel4;
    public static javax.swing.JPanel jPanel5;
    public static javax.swing.JPanel jPanel6;
    public static javax.swing.JPanel jPanel7;
    public static javax.swing.JPanel jPanel8;
    public static javax.swing.JScrollPane jScrollPane1;
    public static javax.swing.JScrollPane jScrollPane2;
    public static javax.swing.JScrollPane jScrollPane3;
    public static javax.swing.JScrollPane jScrollPane4;
    public static javax.swing.JScrollPane jScrollPane5;
    public static javax.swing.JScrollPane jScrollPane6;
    public static javax.swing.JScrollPane jScrollPane8;
    public static javax.swing.JSeparator jSeparator1;
    public static javax.swing.JSeparator jSeparator2;
    public static javax.swing.JSeparator jSeparator3;
    private javax.swing.JLabel label;
    public static javax.swing.JLabel label1;
    private javax.swing.JLabel lblColunaId;
    public javax.swing.JLabel lblEquipamentoLogbook;
    private javax.swing.JLabel lblFaseMovelId;
    public static javax.swing.JLabel lblIconeEquipamento;
    public static javax.swing.JList lstMetodos;
    public static javax.swing.JPanel pnlColuna;
    public static javax.swing.JPanel pnlConfiguraConfigColuna;
    private javax.swing.JTabbedPane pnlDados;
    private javax.swing.JPanel pnlFaseMovel;
    public static javax.swing.JPanel pnlLote;
    private javax.swing.JPanel pnlRegistros;
    public static javax.swing.JPanel pnlSystem;
    public static javax.swing.JRadioButton rbtFiltroNao;
    public static javax.swing.JRadioButton rbtFiltroSim;
    public static javax.swing.JRadioButton rbtPreColunaNao;
    public static javax.swing.JRadioButton rbtPreColunaSim;
    public static javax.swing.JRadioButton rbtSentidoDireto;
    public static javax.swing.JRadioButton rbtSentidoInverso;
    private javax.swing.JTable tblHistoricoColuna;
    private javax.swing.JTable tblHistoricoFaseMovel;
    private javax.swing.JTable tblHistoricoSystem;
    public static javax.swing.JTable tblLotes;
    private javax.swing.JTable tblRegistros;
    public static javax.swing.JTable tblTrocaTurno;
    private javax.swing.JTextField txtAnaliseColuna;
    private javax.swing.JTextField txtAtivacaoColuna;
    public static javax.swing.JTextField txtCampanha;
    private javax.swing.JTextField txtCanalA;
    private javax.swing.JTextField txtCanalB;
    private javax.swing.JTextField txtCanalC;
    private javax.swing.JTextField txtCanalD;
    private javax.swing.JTextField txtCodigoColuna;
    private javax.swing.JTextField txtDiametroColuna;
    private javax.swing.JTextField txtFabricanteColuna;
    public static javax.swing.JSpinner txtHora;
    private javax.swing.JTextField txtLoteCanalA;
    private javax.swing.JTextField txtLoteCanalB;
    private javax.swing.JTextField txtLoteCanalC;
    private javax.swing.JTextField txtLoteCanalD;
    private javax.swing.JTextField txtMarcaColuna;
    private javax.swing.JTextField txtMetodoColuna;
    public static javax.swing.JSpinner txtMinuto;
    public static javax.swing.JTextField txtObs;
    private javax.swing.JTextField txtObsColuna;
    private javax.swing.JTextField txtParticulaColuna;
    public static javax.swing.JTextField txtPesquisarTrocaTurno;
    private javax.swing.JTextField txtQtCanalA;
    private javax.swing.JTextField txtQtCanalB;
    private javax.swing.JTextField txtQtCanalC;
    private javax.swing.JTextField txtQtCanalD;
    public static javax.swing.JSpinner txtSegundo;
    private javax.swing.JTextField txtSetorColuna;
    private javax.swing.JTextField txtTamanhoColuna;
    private javax.swing.JTextField txtVagaColuna;
    private javax.swing.JTextField txtValidadeCanalA;
    private javax.swing.JTextField txtValidadeCanalB;
    private javax.swing.JTextField txtValidadeCanalC;
    private javax.swing.JTextField txtValidadeCanalD;
    // End of variables declaration//GEN-END:variables

    private void readLog() {
        GridlineCellRenderer r = new GridlineCellRenderer(1, 2, 3, 4, 5, 6, 7, 8, 9);
        DefaultTableModel model = (DefaultTableModel) tblRegistros.getModel();
        tblRegistros.setDefaultRenderer(Object.class, r);
        CromatografoDAO equipDao = new CromatografoDAO();
        model.setNumRows(0);
        for (Cromatografo equip : equipDao.readLogCromatografo(lblEquipamentoLogbook.getText())) {
            model.addRow(new Object[]{
                equip.getAnalise().getCor(),
                equip.getLog_cromatografo_id(),
                DataHora.getStringDateTime(equip.getData_inicio()),
                DataHora.getStringDateTime(equip.getData_fim()),
                equip.getAnalise().getAnalise_status()
                + " - " + equip.getDescricao(),
                DataHora.getStringDateTime(equip.getData_registro()),
                equip.getUsuario().getUser()
            });
        }
    }

    private void readTrocaTurno() {
        DefaultTableModel model = (DefaultTableModel) tblTrocaTurno.getModel();
        TrocaTurnoDAO turnoDao = new TrocaTurnoDAO();
        model.setNumRows(0);
        for (TrocaTurno turno : turnoDao.readTrocaTurno(lblEquipamentoLogbook.getText())) {
            model.addRow(new Object[]{
                turno.getTroca_turno_id(),
                turno.getTurno(),
                turno.getCampanha(),
                turno.getDescricao_turno() + "...",
                DataHora.getStringDateTime(turno.getData_registro()),
                turno.getUser_name().getUser()
            });
        }
    }

    private void readSistema() {
        ckbColuna.setEnabled(false);
        ckbFaseMovel.setEnabled(false);
        ckbSystem.setEnabled(false);
        ckbColuna.setSelected(false);
        ckbFaseMovel.setSelected(false);
        ckbSystem.setSelected(false);
        String currentdate = DataHora.getStringDate(new Date());
        if (!"".equals(txtValidadeCanalA.getText())) {
            if (!DataHora.getTimestampDate(txtValidadeCanalA.getText()).after(DataHora.getTimestampDate(currentdate))) {
                if (!DataHora.getTimestampDate(txtValidadeCanalA.getText()).equals(DataHora.getTimestampDate(currentdate))) {
                    JOptionPane.showMessageDialog(null, 
                            "Validade da Fase MÃ³vel do Canal A estÃ¡ vencida", "Fase MÃ³vel", JOptionPane.ERROR_MESSAGE );
                    ckbFaseMovel.setSelected(false);
                } else {
                    ckbFaseMovel.setSelected(true);
                }
            } else {
                ckbFaseMovel.setSelected(true);
            }
        }
        if (!"".equals(txtValidadeCanalB.getText())) {
            if (!DataHora.getTimestampDate(txtValidadeCanalB.getText()).after(DataHora.getTimestampDate(currentdate))) {
                if (!DataHora.getTimestampDate(txtValidadeCanalB.getText()).equals(DataHora.getTimestampDate(currentdate))) {
                    JOptionPane.showMessageDialog(null, 
                            "Validade da Fase MÃ³vel do Canal B estÃ¡ vencida", "Fase MÃ³vel", JOptionPane.ERROR_MESSAGE );
                    ckbFaseMovel.setSelected(false);
                } else {
                    ckbFaseMovel.setSelected(true);
                }
            } else {
                ckbFaseMovel.setSelected(true);
            }
        }
        if (!"".equals(txtValidadeCanalC.getText())) {
            if (!DataHora.getTimestampDate(txtValidadeCanalC.getText()).after(DataHora.getTimestampDate(currentdate))) {
                if (!DataHora.getTimestampDate(txtValidadeCanalC.getText()).equals(DataHora.getTimestampDate(currentdate))) {
                    JOptionPane.showMessageDialog(null, 
                            "Validade da Fase MÃ³vel do Canal C estÃ¡ vencida", "Fase MÃ³vel", JOptionPane.ERROR_MESSAGE );
                    ckbFaseMovel.setSelected(false);
                } else {
                    ckbFaseMovel.setSelected(true);
                }
            } else {
                ckbFaseMovel.setSelected(true);
            }
        }
        if (!"".equals(txtValidadeCanalD.getText())) {
            if (!DataHora.getTimestampDate(txtValidadeCanalD.getText()).after(DataHora.getTimestampDate(currentdate))) {
                if (!DataHora.getTimestampDate(txtValidadeCanalD.getText()).equals(DataHora.getTimestampDate(currentdate))) {
                    JOptionPane.showMessageDialog(null, 
                            "Validade da Fase MÃ³vel do Canal D estÃ¡ vencida", "Fase MÃ³vel", JOptionPane.ERROR_MESSAGE );
                    ckbFaseMovel.setSelected(false);
                } else {
                    ckbFaseMovel.setSelected(true);
                }
            } else {
                ckbFaseMovel.setSelected(true);
            }
        }
        if (!"0".equals(lblColunaId.getText())) {
            ckbColuna.setSelected(true);
        }

        if (tblHistoricoSystem.getRowCount() > 0) {
            if ((Boolean) tblHistoricoSystem.getValueAt(0, 4)) {
                ckbSystem.setSelected(true);
            }
        }
    }

    private void carregarCampanha(String sys_name) {
        try {
            Cromatografo equip = new Cromatografo();
            CromatografoDAO equipDao = new CromatografoDAO();
            equip.setSystem_name(sys_name);
            equipDao.selectLogCampamhaCromatografo(equip);
            txtCampanha.setText(equip.getCampanha());
            txtObs.setText(equip.getObs_log());
            String text = equip.getMetodos();
            String a = "a";
            String b = "b";
            String c = "c";
            String d = "d";
            categoryMapMetodo.clear();
            DefaultListModel model = new DefaultListModel();
            MetodologiaDAO mtdDAO = new MetodologiaDAO();
            Object mtd1 = mtdDAO.selectMetodologiaById(text.substring(text.indexOf(a) + 1, text.indexOf(b)));
            Object mtd2 = mtdDAO.selectMetodologiaById(text.substring(text.indexOf(b) + 1, text.indexOf(c)));
            Object mtd3 = mtdDAO.selectMetodologiaById(text.substring(text.indexOf(c) + 1, text.indexOf(d)));
            Object mtd4 = mtdDAO.selectMetodologiaById(text.substring(text.indexOf(d) + 1, text.length()));
            categoryMapMetodo.put(0, mtdDAO.selectMetodologiaLinkById(text.substring(text.indexOf(a) + 1, text.indexOf(b))));
            categoryMapMetodo.put(1, mtdDAO.selectMetodologiaLinkById(text.substring(text.indexOf(b) + 1, text.indexOf(c))));
            categoryMapMetodo.put(2, mtdDAO.selectMetodologiaLinkById(text.substring(text.indexOf(c) + 1, text.indexOf(d))));
            categoryMapMetodo.put(3, mtdDAO.selectMetodologiaLinkById(text.substring(text.indexOf(d) + 1, text.length())));
            model.addElement(mtd1);
            model.addElement(mtd2);
            model.addElement(mtd3);
            model.addElement(mtd4);
            lstMetodos.setModel(model);
        } catch (Exception e) {

        }
    }

    private void carregarFaseMovel(String sys_name) {
        FaseMovel fase = new FaseMovel();
        FaseMovelDAO faseDAO = new FaseMovelDAO();
        Cromatografo equip = new Cromatografo();
        equip.setSystem_name(sys_name);
        fase.setCromatografo(equip);
        faseDAO.selectUltimaFaseMovelBySystem(fase);
        lblFaseMovelId.setText(String.valueOf(fase.getFase_movel_id()));
        txtCanalA.setText(fase.getFase_movel_a());
        txtQtCanalA.setText(Integer.toString(fase.getFase_movel_a_qt()));
        txtLoteCanalA.setText(fase.getFase_movel_a_lote());
        txtValidadeCanalA.setText(DataHora.getStringDate(fase.getFase_movel_a_validade()));
        txtCanalB.setText(fase.getFase_movel_b());
        txtQtCanalB.setText(Integer.toString(fase.getFase_movel_b_qt()));
        txtLoteCanalB.setText(fase.getFase_movel_b_lote());
        txtValidadeCanalB.setText(DataHora.getStringDate(fase.getFase_movel_b_validade()));
        txtCanalC.setText(fase.getFase_movel_c());
        txtQtCanalC.setText(Integer.toString(fase.getFase_movel_c_qt()));
        txtLoteCanalC.setText(fase.getFase_movel_c_lote());
        txtValidadeCanalC.setText(DataHora.getStringDate(fase.getFase_movel_c_validade()));
        txtCanalD.setText(fase.getFase_movel_d());
        txtQtCanalD.setText(Integer.toString(fase.getFase_movel_d_qt()));
        txtLoteCanalD.setText(fase.getFase_movel_d_lote());
        txtValidadeCanalD.setText(DataHora.getStringDate(fase.getFase_movel_d_validade()));
    }

    private void readHistoricoFaseMovel(String sys_name) {
        DefaultTableModel model = (DefaultTableModel) tblHistoricoFaseMovel.getModel();
        FaseMovelDAO faseDAO = new FaseMovelDAO();
        model.setNumRows(0);
        for (FaseMovel fase : faseDAO.readFaseMovelBySystem(sys_name)) {
            model.addRow(new Object[]{
                "Canal A: "
                + fase.getFase_movel_a().toUpperCase() + " - Lote: "
                + fase.getFase_movel_a_lote().toUpperCase() + " - "
                + fase.getFase_movel_a_qt() + "% / "
                + "Canal B: "
                + fase.getFase_movel_b().toUpperCase() + " - Lote: "
                + fase.getFase_movel_b_lote().toUpperCase() + " - "
                + fase.getFase_movel_b_qt() + "% / "
                + "Canal C: "
                + fase.getFase_movel_c().toUpperCase() + " - Lote: "
                + fase.getFase_movel_c_lote().toUpperCase() + " - "
                + fase.getFase_movel_c_qt() + "% / "
                + "Canal D: "
                + fase.getFase_movel_d().toUpperCase() + " - Lote: "
                + fase.getFase_movel_d_lote().toUpperCase() + "% - "
                + fase.getFase_movel_d_qt(),
                fase.getUser().getUser(),
                fase.getData_registro()
            });
        }
    }

    private void readHistoricoColuna(String sys_name) {
        DefaultTableModel model = (DefaultTableModel) tblHistoricoColuna.getModel();
        ColunaDAO colDAO = new ColunaDAO();
        model.setNumRows(0);
        for (Coluna col : colDAO.readColunaBySystem(sys_name)) {
            model.addRow(new Object[]{
                "CQ-" + col.getTipo_coluna()
                + "-" + zeros.substring(String.valueOf(col.getColuna_id()).length())
                + String.valueOf(col.getColuna_id()) + " | "
                + col.getFabricante_coluna() + " - "
                + col.getMarca_coluna() + " | "
                + col.getTamanho_coluna() + "mm x "
                + col.getDiametro_coluna() + "mm x "
                + col.getParticula_coluna() + "um | "
                + col.getMetodologia().getCod_metodo(),
                col.getUser_log_coluna().getUser(),
                col.getData_registro_log()
            });
        }
    }

    private void carregarColuna(String sys_name) {
        try {
            Coluna col = new Coluna();
            ColunaDAO colDAO = new ColunaDAO();
            Cromatografo equip = new Cromatografo();
            equip.setSystem_name(sys_name);
            col.setCromatografo(equip);
            colDAO.selectUltimaColunaBySystem(col);
            lblColunaId.setText(String.valueOf(col.getColuna_id()));
            txtCodigoColuna.setText("CQ-" + col.getTipo_coluna()
                    + "-" + zeros.substring(String.valueOf(col.getCodigo_coluna()).length())
                    + String.valueOf(col.getCodigo_coluna()));
            txtAnaliseColuna.setText(col.getAnalise().getAnalise());
            txtAtivacaoColuna.setText(DataHora.getStringDate(col.getData_ativacao_coluna()));
            txtDiametroColuna.setText(col.getDiametro_coluna());
            txtFabricanteColuna.setText(col.getFabricante_coluna());
            txtMarcaColuna.setText(col.getMarca_coluna());
            txtMetodoColuna.setText(col.getMetodologia().getMetodo());
            txtObsColuna.setText(col.getObs_coluna());
            txtParticulaColuna.setText(col.getParticula_coluna());
            txtSetorColuna.setText(col.getSetor().getSetor());
            txtTamanhoColuna.setText(col.getTamanho_coluna());
            txtVagaColuna.setText(String.valueOf("Gaveta: " + (int) Math.ceil((double) col.getVaga_coluna() / 19)
                    + " - Vaga: " + col.getVaga_coluna()));
            rbtSentidoDireto.setSelected(col.isSentido());
            rbtSentidoInverso.setSelected(!col.isSentido());
            rbtFiltroSim.setSelected(col.isPrefiltro());
            rbtFiltroNao.setSelected(!col.isPrefiltro());
            rbtPreColunaSim.setSelected(col.isPrecoluna());
            rbtPreColunaNao.setSelected(!col.isPrecoluna());
        } catch (Exception e) {
        }
    }

    private void readHistoricoSystem(String sys_name) {
        DefaultTableModel model = (DefaultTableModel) tblHistoricoSystem.getModel();
        SystemSuitabilityDAO systemDAO = new SystemSuitabilityDAO();
        model.setNumRows(0);
        for (SystemSuitability system : systemDAO.readSystemSuitabilityBySystem(sys_name)) {
            model.addRow(new Object[]{
                system.getSystem_suitability_id(),
                system.getSolucao_1() + " "
                + system.getNumero_solucao_1()
                + " (" + system.getDescricao_solucao_1() + ") | "
                + (("".equals(system.getSolucao_2()))
                ? "" : (system.getSolucao_2() + " "
                + system.getNumero_solucao_2()
                + " (" + system.getDescricao_solucao_2() + ") | "))
                + (("".equals(system.getSolucao_3()))
                ? "" : (system.getSolucao_3()
                + " " + system.getNumero_solucao_3()
                + " (" + system.getDescricao_solucao_3() + ") | "))
                + (("".equals(system.getSolucao_4()))
                ? "" : (system.getSolucao_4()
                + " " + system.getNumero_solucao_4()
                + " (" + system.getDescricao_solucao_4() + ") | "))
                + (("".equals(system.getSolucao_5()))
                ? "" : (system.getSolucao_5()
                + " " + system.getNumero_solucao_5()
                + " (" + system.getDescricao_solucao_5() + ") | "))
                + (("".equals(system.getSolucao_6()))
                ? "" : (system.getSolucao_6()
                + " " + system.getNumero_solucao_6()
                + " (" + system.getDescricao_solucao_6() + ") | "))
                + (("".equals(system.getSolucao_7()))
                ? "" : (system.getSolucao_7()
                + " " + system.getNumero_solucao_7()
                + " (" + system.getDescricao_solucao_7() + ") | "))
                + (("".equals(system.getSolucao_8()))
                ? "" : (system.getSolucao_8()
                + " " + system.getNumero_solucao_8()
                + " (" + system.getDescricao_solucao_8() + ") - "))
                + (("".equals(system.getSolucao_9()))
                ? "" : (system.getSolucao_9()
                + " " + system.getNumero_solucao_9()
                + " (" + system.getDescricao_solucao_9() + ") | ")),
                system.getUser_name().getUser(),
                DataHora.getStringDateTime(system.getData_registro()),
                system.isCheck_system_suitability(),
                system.getUser_check().getUser(),});
        }
    }

    private void updateSystemSuitability() {
        SystemSuitability system = new SystemSuitability();
        SystemSuitabilityDAO systemDAO = new SystemSuitabilityDAO();
        Usuario user = new Usuario();
        try {
            system.setSystem_suitability_id((Integer) tblHistoricoSystem.getValueAt(tblHistoricoSystem.getSelectedRow(), 0));
            user.setUser(System.getProperty("user"));
            system.setUser_check(user);
            system.setData_registro(DataHora.getTimestampDate(new Date()));
            system.setCheck_system_suitability(true);
            systemDAO.updateValidarSystemSuitability(system);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Erro ao atualizar dados: " + e);
        }
    }

    private void iniciarContagem() {
        ActionListener action = new ActionListener() {
            public void actionPerformed(ActionEvent e) {
                currentSegundo--;

                if (currentHora <= 0 && currentMinuto <= 0 && currentSegundo <= 0) {
                    stopTime();
                }

                if (currentSegundo == -1) {
                    currentMinuto--;
                    currentSegundo = 59;
                }

                if (currentMinuto == -1) {
                    currentHora--;
                    currentMinuto = 59;
                }

                String hr = currentHora <= 9 ? "0" + currentHora : currentHora + "";
                String min = currentMinuto <= 9 ? "0" + currentMinuto : currentMinuto + "";
                String seg = currentSegundo <= 9 ? "0" + currentSegundo : currentSegundo + "";

                label.setText(hr + ":" + min + ":" + seg);
            }
        };
        this.timer = new Timer(velocidade, action);
        this.timer.start();
    }

    private void stopTime() {
        timer.stop();
        currentHora = 0;
        currentMinuto = 0;
        currentSegundo = 0;
        label.setText("00:00:00");
    }

    private void carregarCorridas(String sys_name) {
        try {
            Cromatografo equip = new Cromatografo();
            CromatografoDAO equipDao = new CromatografoDAO();
            equip.setSystem_name(sys_name);
            equipDao.selectLogCampamhaCromatografo(equip);
            txtCampanha.setText(equip.getCampanha());
            txtObs.setText(equip.getObs_log());
            String text = equip.getMetodos();
            String a = "a";
            String b = "b";
            String c = "c";
            String d = "d";
            categoryMapMetodo.clear();
            DefaultListModel model = new DefaultListModel();
            MetodologiaDAO mtdDAO = new MetodologiaDAO();
            Object mtd1 = mtdDAO.selectMetodologiaById(text.substring(text.indexOf(a) + 1, text.indexOf(b)));
            Object mtd2 = mtdDAO.selectMetodologiaById(text.substring(text.indexOf(b) + 1, text.indexOf(c)));
            Object mtd3 = mtdDAO.selectMetodologiaById(text.substring(text.indexOf(c) + 1, text.indexOf(d)));
            Object mtd4 = mtdDAO.selectMetodologiaById(text.substring(text.indexOf(d) + 1, text.length()));
            categoryMapMetodo.put(0, mtdDAO.selectMetodologiaLinkById(text.substring(text.indexOf(a) + 1, text.indexOf(b))));
            categoryMapMetodo.put(1, mtdDAO.selectMetodologiaLinkById(text.substring(text.indexOf(b) + 1, text.indexOf(c))));
            categoryMapMetodo.put(2, mtdDAO.selectMetodologiaLinkById(text.substring(text.indexOf(c) + 1, text.indexOf(d))));
            categoryMapMetodo.put(3, mtdDAO.selectMetodologiaLinkById(text.substring(text.indexOf(d) + 1, text.length())));
            model.addElement(mtd1);
            model.addElement(mtd2);
            model.addElement(mtd3);
            model.addElement(mtd4);
            lstMetodos.setModel(model);
        } catch (Exception e) {

        }
    }

    public final void readCadastroProduto() {
        DefaultTableModel model = (DefaultTableModel) tblLotes.getModel();
        LoteDAO equipDao = new LoteDAO();
        model.setNumRows(0);
        JComboBox comboSetor = new JComboBox();
        comboSetor.addItem("");
        categoryMapSetor.clear();
        SetorDAO setorDao = new SetorDAO();
        for (Setor setor : setorDao.readSetor()) {
            Integer id = setor.getSetor_id();
            String name = setor.getSigla_setor();
            comboSetor.addItem(name);
            categoryMapSetor.put(id, name);
        }
        TableColumn colSetor = tblLotes.getColumnModel().getColumn(4);
        colSetor.setCellEditor(new DefaultCellEditor(comboSetor));
        for (Lote lot : equipDao.readCadastroProduto("100")) {
            model.addRow(new Object[]{
                lot.getLote_id(),
                lot.getAnalise().getSigla_analise_finalidade() + " - "
                + lot.getProduto().getMaterial(),
                lot.getLote_produto(),
                DataHora.getStringDate(lot.getData_entrada()),
                lot.getLote_status()
            });
        }
    }
}

class FooRunnable implements Runnable {

    public void run() {
        for (int x = 1; x < 6; x++) {
            System.out.println("Runnable Running");
        }
    }
}
