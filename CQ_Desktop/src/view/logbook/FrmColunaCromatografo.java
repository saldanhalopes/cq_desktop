/*
 * Copyright (C) 2017 rafael.lopes
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
package view.logbook;

import DAO.ColunaDAO;
import DAO.CromatografoDAO;
import DAO.SetorDAO;
import model.Coluna;
import model.Cromatografo;
import model.Setor;
import model.Usuario;
import util.DataHora;
import java.util.ArrayList;
import java.util.TreeMap;
import javax.swing.ButtonGroup;
import javax.swing.JOptionPane;
import javax.swing.RowFilter;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableRowSorter;

/**
 *
 * @author rafael.lopes
 */
public class FrmColunaCromatografo extends javax.swing.JDialog {

    final String zeros = "0000";
    private static String sys_name;
    private TreeMap<Integer, String> categoryMapSetorPesquisar = new TreeMap<>();

    /**
     * Creates new form FrmFaseMovelCromatografo
     *
     * @param parent
     * @param modal
     * @param system_name
     */
    public FrmColunaCromatografo(java.awt.Frame parent, boolean modal, String system_name) {
        super(parent, modal);
        initComponents();
        sys_name = system_name;
        setLocationRelativeTo(null);
        setDefaultCloseOperation(DO_NOTHING_ON_CLOSE);
        setTitle("Coluna");
        this.setResizable(false);
        readSetorPesquisar();
        readColuna();
        if (btnCancelar.isVisible()) {
            btnAguardando.setVisible(false);
        }
        ButtonGroup Sentidogroup = new ButtonGroup();
        Sentidogroup.add(rbtSentidoDireto);
        Sentidogroup.add(rbtSentidoInverso);
        ButtonGroup Filtrogroup = new ButtonGroup();
        Filtrogroup.add(rbtFiltroSim);
        Filtrogroup.add(rbtFiltroNao);
        ButtonGroup PreColunagroup = new ButtonGroup();
        PreColunagroup.add(rbtPreColunaSim);
        PreColunagroup.add(rbtPreColunaNao);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnCancelar = new javax.swing.JButton();
        btnSalvar = new javax.swing.JButton();
        jPanel5 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblColuna = new javax.swing.JTable();
        jLabel4 = new javax.swing.JLabel();
        txtPesquisarColuna = new javax.swing.JTextField();
        jLabel25 = new javax.swing.JLabel();
        cmbPesquisarSetor = new javax.swing.JComboBox();
        btnAguardando = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        rbtSentidoDireto = new javax.swing.JRadioButton();
        rbtSentidoInverso = new javax.swing.JRadioButton();
        jPanel2 = new javax.swing.JPanel();
        rbtFiltroSim = new javax.swing.JRadioButton();
        rbtFiltroNao = new javax.swing.JRadioButton();
        jPanel3 = new javax.swing.JPanel();
        rbtPreColunaNao = new javax.swing.JRadioButton();
        rbtPreColunaSim = new javax.swing.JRadioButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        btnCancelar.setText("Cancelar");
        btnCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelarActionPerformed(evt);
            }
        });

        btnSalvar.setText("Selecionar");
        btnSalvar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSalvarActionPerformed(evt);
            }
        });

        jPanel5.setBorder(javax.swing.BorderFactory.createTitledBorder("Colunas"));

        tblColuna.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Id", "Coluna", "Análise", "Ativação", "Localização"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblColuna.setSurrendersFocusOnKeystroke(true);
        jScrollPane1.setViewportView(tblColuna);
        if (tblColuna.getColumnModel().getColumnCount() > 0) {
            tblColuna.getColumnModel().getColumn(0).setMinWidth(0);
            tblColuna.getColumnModel().getColumn(0).setPreferredWidth(0);
            tblColuna.getColumnModel().getColumn(0).setMaxWidth(0);
            tblColuna.getColumnModel().getColumn(1).setPreferredWidth(300);
            tblColuna.getColumnModel().getColumn(2).setPreferredWidth(200);
            tblColuna.getColumnModel().getColumn(3).setPreferredWidth(90);
            tblColuna.getColumnModel().getColumn(4).setPreferredWidth(140);
        }

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1)
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 251, Short.MAX_VALUE)
        );

        jLabel4.setText("Pesquisar:");

        txtPesquisarColuna.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtPesquisarColunaKeyReleased(evt);
            }
        });

        jLabel25.setText("Setor:");

        cmbPesquisarSetor.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cmbPesquisarSetorItemStateChanged(evt);
            }
        });

        btnAguardando.setText("Aguardando");
        btnAguardando.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAguardandoActionPerformed(evt);
            }
        });

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Sentido"));

        rbtSentidoDireto.setText("Direto");

        rbtSentidoInverso.setText("Inverso");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(rbtSentidoDireto)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(rbtSentidoInverso)
                .addContainerGap(114, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(rbtSentidoDireto)
                    .addComponent(rbtSentidoInverso))
                .addGap(0, 0, Short.MAX_VALUE))
        );

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Pré-Filtro"));

        rbtFiltroSim.setText("Sim");

        rbtFiltroNao.setText("Não");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(rbtFiltroSim)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(rbtFiltroNao)
                .addContainerGap(150, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(rbtFiltroSim)
                    .addComponent(rbtFiltroNao))
                .addGap(0, 9, Short.MAX_VALUE))
        );

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder("Pré-Coluna"));

        rbtPreColunaNao.setText("Não");

        rbtPreColunaSim.setText("Sim");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(rbtPreColunaSim)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(rbtPreColunaNao)
                .addContainerGap(144, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(rbtPreColunaNao)
                    .addComponent(rbtPreColunaSim))
                .addGap(0, 9, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(64, 64, 64)
                        .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(66, 66, 66)
                        .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtPesquisarColuna)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel25)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cmbPesquisarSetor, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnAguardando)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnSalvar, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnCancelar, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(txtPesquisarColuna, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel4))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(cmbPesquisarSetor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel25)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(jPanel3, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnCancelar)
                    .addComponent(btnSalvar)
                    .addComponent(btnAguardando))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelarActionPerformed
        dispose();
    }//GEN-LAST:event_btnCancelarActionPerformed

    private void btnSalvarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSalvarActionPerformed
        if (tblColuna.getSelectedRow() != -1) {
            if (!(rbtSentidoDireto.isSelected() || rbtSentidoInverso.isSelected())) {
                JOptionPane.showMessageDialog(null, "Sentido inválido");
            } else if (!(rbtFiltroSim.isSelected() || rbtFiltroNao.isSelected())) {
                JOptionPane.showMessageDialog(null, "Pré-Filtro inválido");
            } else if (!(rbtPreColunaSim.isSelected() || rbtPreColunaNao.isSelected())) {
                JOptionPane.showMessageDialog(null, "Pré-Coluna inválida");
            } else {
                int dialogResult = JOptionPane.showConfirmDialog(null,
                        "Deseja utilizar esta coluna:\n" + tblColuna.getValueAt(tblColuna.getSelectedRow(), 1),
                        "Aviso", JOptionPane.YES_NO_OPTION);
                if (dialogResult == 0) {
                    //Envia Codigo de Coluna
                    String analise_status = "3";
                    //Seleciona o Equipamento
                    Cromatografo equip = new Cromatografo();
                    CromatografoDAO equipDAO = new CromatografoDAO();
                    equip.setSystem_name(sys_name);
                    equipDAO.selectEquipamentoByName(equip);
                    //Abre Dialog para savar
                    FrmDialogSalvar frmSalvar = new FrmDialogSalvar(null, true, sys_name, 
                            analise_status, "COLUNA");
                    frmSalvar.setVisible(true);
                    if (FrmDialogSalvar.senha()) {
                        criarColunaCromatografo();
                        dispose();
                    }
                }
            }
        }
    }//GEN-LAST:event_btnSalvarActionPerformed

    private void txtPesquisarColunaKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtPesquisarColunaKeyReleased
        TableRowSorter sorter = null;
        DefaultTableModel model = (DefaultTableModel) tblColuna.getModel();
        sorter = new TableRowSorter<>(model);
        tblColuna.setRowSorter(sorter);
        String text = txtPesquisarColuna.getText().trim();
        String parametro = "*";
        if (text.length() == 0) {
            sorter.setRowFilter(null);
        } else if (text.indexOf(parametro) > 0) {
            ArrayList<RowFilter<Object, Object>> andFilters = new ArrayList<>();
            andFilters.add(RowFilter.regexFilter("(?i)" + text.substring(0, text.indexOf(parametro)).trim().toUpperCase()));
            andFilters.add(RowFilter.regexFilter("(?i)" + text.substring(text.indexOf(parametro) + 1, text.length()).trim().toUpperCase()));
            sorter.setRowFilter(RowFilter.andFilter(andFilters));
        } else {
            sorter.setRowFilter(RowFilter.regexFilter("(?i)" + text));
        }
    }//GEN-LAST:event_txtPesquisarColunaKeyReleased

    private void cmbPesquisarSetorItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cmbPesquisarSetorItemStateChanged
        readColuna();
    }//GEN-LAST:event_cmbPesquisarSetorItemStateChanged

    private void btnAguardandoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAguardandoActionPerformed
        //Envia Codigo de Coluna
        String analise_status = "7";
        //Seleciona o Equipamento
        Cromatografo equip = new Cromatografo();
        CromatografoDAO equipDAO = new CromatografoDAO();
        equip.setSystem_name(sys_name);
        equipDAO.selectEquipamentoByName(equip);
        //Abre Dialog para savar
        FrmDialogSalvar frmSalvar = new FrmDialogSalvar(null, true, sys_name, 
                analise_status, "COLUNA");
        frmSalvar.setVisible(true);
        if (FrmDialogSalvar.senha()) {
            criarColunaCromatografo();
            dispose();
        }
    }//GEN-LAST:event_btnAguardandoActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FrmColunaCromatografo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FrmColunaCromatografo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FrmColunaCromatografo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FrmColunaCromatografo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                FrmColunaCromatografo dialog = new FrmColunaCromatografo(new javax.swing.JFrame(), true, null);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    public static javax.swing.JButton btnAguardando;
    public static javax.swing.JButton btnCancelar;
    private javax.swing.JButton btnSalvar;
    private javax.swing.JComboBox cmbPesquisarSetor;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JRadioButton rbtFiltroNao;
    private javax.swing.JRadioButton rbtFiltroSim;
    private javax.swing.JRadioButton rbtPreColunaNao;
    private javax.swing.JRadioButton rbtPreColunaSim;
    private javax.swing.JRadioButton rbtSentidoDireto;
    private javax.swing.JRadioButton rbtSentidoInverso;
    private javax.swing.JTable tblColuna;
    private javax.swing.JTextField txtPesquisarColuna;
    // End of variables declaration//GEN-END:variables

    public final void readSetorPesquisar() {
        cmbPesquisarSetor.removeAllItems();
        cmbPesquisarSetor.addItem("Todos");
        categoryMapSetorPesquisar.clear();
        SetorDAO setorDao = new SetorDAO();
        for (Setor setor : setorDao.readSetor()) {
            Integer id = setor.getSetor_id();
            String name = setor.getSigla_setor();
            cmbPesquisarSetor.addItem(name);
            categoryMapSetorPesquisar.put(id, name);
        }
    }

    public final void readColuna() {
        DefaultTableModel model = (DefaultTableModel) tblColuna.getModel();
        ColunaDAO colDao = new ColunaDAO();
        model.setNumRows(0);
        int status = 1;
        String setor = cmbPesquisarSetor.getSelectedItem().toString();
        for (Coluna col : colDao.readColuna(setor, status)) {
            model.addRow(new Object[]{
                col.getColuna_id(),
                "CQ-"
                + col.getTipo_coluna()
                + "-" + zeros.substring(String.valueOf(col.getCodigo_coluna()).length())
                + String.valueOf(col.getCodigo_coluna()) + " - "
                + col.getFabricante_coluna() + " "
                + col.getMarca_coluna() + " - "
                + col.getTipo_coluna() + " "
                + col.getTamanho_coluna() + "mm x "
                + col.getDiametro_coluna() + "mm x "
                + col.getParticula_coluna() + "um ",
                col.getMetodologia().getCod_metodo() + " - "
                + col.getMetodologia().getMetodo(),
                DataHora.getStringDate(col.getData_ativacao_coluna()),
                "Gaveta: " + (int) Math.ceil((double) col.getVaga_coluna() / 19)
                + " - Vaga: " + col.getVaga_coluna()
            });
        }
    }

    private void criarColunaCromatografo() {
        try {
            Coluna col = new Coluna();
            ColunaDAO colDAO = new ColunaDAO();
            Cromatografo equip = new Cromatografo();
            Usuario user = new Usuario();
            if (tblColuna.getSelectedRow() != -1) {
                col.setColuna_id((Integer) tblColuna.getValueAt(tblColuna.getSelectedRow(), 0));
            } else {
                col.setColuna_id(0);
            }
            col.setData_registro_log(DataHora.DateTimeNow());
            col.setSentido(rbtSentidoDireto.isSelected());
            col.setPrefiltro(rbtFiltroSim.isSelected());
            col.setPrecoluna(rbtPreColunaSim.isSelected());
            user.setUser(System.getProperty("user"));
            equip.setSystem_name(sys_name);
            col.setCromatografo(equip);
            col.setUser_log_coluna(user);
            colDAO.createLogColuna(col);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Erro ao gravar dados: " + e);
        }
    }

}
